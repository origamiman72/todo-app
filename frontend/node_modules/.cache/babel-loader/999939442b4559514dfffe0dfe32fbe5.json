{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"; // import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\n\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline';\nimport AddIcon from '@material-ui/icons/Add'; // import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import 'react-day-picker/lib/style.css';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\nimport AddTask from './AddTask';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.addCategory = this.addCategory.bind(this);\n    this.setCategory = this.setCategory.bind(this);\n    this.removeCategory = this.removeCategory.bind(this);\n    this.filterTasks = this.filterTasks.bind(this);\n    this.toggleAddCategory = this.toggleAddCategory.bind(this);\n    this.state = {\n      taskList: [],\n      uncompletedTasks: [],\n      completedTasks: [],\n      selectedDate: null,\n      categories: [],\n      selectedCategory: null,\n      filters: [],\n      addingCategory: false\n    };\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  async getCategories() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    console.log(\"categories\", categories);\n    this.setState({\n      categories: categories.data.categories\n    });\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    } // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n    this.getCategories();\n  } // Refreshes tasks shown on this page.\n\n\n  async refreshTasks() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Deletes a task.\n\n\n  async deleteTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Edits a task.\n\n\n  async editTask(id, newContent, newCategory, newDate) {\n    console.log(newDate);\n\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/editTask', {\n      key: id,\n      newContent: newContent,\n      newCategory: newCategory,\n      newDate: newDate\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    }); // this.refreshTasks();\n  } // Marks a task as completed.\n\n\n  async completeTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Adds a new task\n\n\n  async addTask(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate,\n        category: this.state.selectedCategory\n      };\n      console.log(newTask); // console.log(newTask);\n\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.refreshTasks();\n      this._inputElement.value = null;\n      this.setState({\n        selectedDate: null,\n        selectedCategory: null\n      });\n    }\n  }\n\n  setCategory(category) {\n    this.setState({\n      selectedCategory: category\n    });\n  }\n\n  async addCategory(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault();\n\n    if (this._inputcategory !== \"\") {\n      console.log(this._inputcategory);\n      await axios.post('http://localhost:8081/app/addCategory', {\n        userId: auth0Client.getProfile().sub,\n        newCategory: this._inputcategory.value\n      }, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      var categories = this.state.categories;\n      categories.push(this._inputcategory.value);\n      this.setState({\n        categories: categories\n      });\n      this._inputcategory.value = null; // this.getCategories();\n    }\n  }\n\n  async removeCategory(category) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    await axios.post('http://localhost:8081/app/removeCategory', {\n      userId: auth0Client.getProfile().sub,\n      category: category\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var categories = this.state.categories.filter(item => item !== category);\n    this.setState({\n      categories: categories\n    }); // this.getCategories();\n\n    this.refreshTasks();\n  }\n\n  async filterTasks(category) {\n    var uncompletedTasks = this.state.taskList.filter(task => task.completed == false);\n    var completedTasks = this.state.taskList.filter(task => task.completed == true);\n\n    if (this.state.filters[0] == category) {\n      this.setState({\n        uncompletedTasks: uncompletedTasks,\n        completedTasks: completedTasks,\n        filters: []\n      });\n      return;\n    }\n\n    var filters = [category];\n    uncompletedTasks = uncompletedTasks.filter(task => task.category == category);\n    completedTasks = completedTasks.filter(task => task.category == category);\n    this.setState({\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks,\n      filters: filters\n    });\n  }\n\n  toggleAddCategory() {\n    this.setState({\n      addingCategory: !this.state.addingCategory\n    });\n  }\n\n  render() {\n    if (this.state.uncompletedTasks.length === 0) {\n      var uncompletedTasksRender = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 42\n        }\n      }, \"You've completed all of your tasks!\");\n    } else {\n      var uncompletedTasksRender = this.state.uncompletedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n        displayMenu: true,\n        displayDate: true,\n        key: task.date,\n        edit: this.editTask,\n        complete: this.completeTask,\n        remove: this.deleteTask,\n        categories: this.state.categories,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 43\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-Cont\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"sidebar\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between categories-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 29\n      }\n    }, \"Categories\"), /*#__PURE__*/React.createElement(IconButton, {\n      size: \"small\",\n      \"aria-label\": \"add new category\",\n      onClick: () => this.toggleAddCategory(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(AddIcon, {\n      className: \"add-icon\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 33\n      }\n    }))), this.state.addingCategory && /*#__PURE__*/React.createElement(\"form\", {\n      onBlur: () => this.toggleAddCategory(),\n      onSubmit: this.addCategory,\n      required: true,\n      id: \"addCategoryForm\",\n      className: \"card-1 horiz form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          this.addCategory(ev);\n        }\n      },\n      className: \"textField\",\n      inputRef: b => this._inputcategory = b,\n      label: \"Add new Category\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 29\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"categories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 25\n      }\n    }, this.state.categories.map((category, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"align-items-center sidebarCategory d-flex justify-content-between \" + (this.state.filters.indexOf(category) > -1 && \"selected\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categoryLabel clickable\",\n      onClick: () => this.filterTasks(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 49\n      }\n    }, category), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"hover-only\",\n      \"aria-controls\": \"delete-category\",\n      onClick: () => this.removeCategory(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 53\n      }\n    })))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AddTask, {\n      refreshTasks: this.refreshTasks,\n      categories: this.state.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 25\n      }\n    }, uncompletedTasksRender)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 21\n      }\n    }, this.state.completedTasks.length != 0 && \"Completed\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 25\n      }\n    }, this.state.completedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      displayMenu: true,\n      displayDate: true,\n      key: task.date,\n      complete: this.completeTask,\n      remove: this.deleteTask,\n      categories: this.state.categories,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 43\n      }\n    })))))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","FlipMove","KeyboardDatePicker","MuiPickersUtilsProvider","TextField","CategoryMenu","moment","MomentUtils","Paper","AddIcon","Button","IconButton","CloseIcon","Typography","AddTask","TaskList","constructor","props","addTask","bind","editTask","deleteTask","completeTask","updateDate","getCategories","addCategory","setCategory","removeCategory","filterTasks","toggleAddCategory","state","taskList","uncompletedTasks","completedTasks","selectedDate","categories","selectedCategory","filters","addingCategory","date","setState","isAuthenticated","history","push","post","userId","getProfile","sub","headers","getIdToken","console","log","data","componentDidMount","tasks","i","todoTasks","length","completed","refreshTasks","key","attempt","id","newContent","newCategory","newDate","e","preventDefault","_inputElement","newTask","content","value","dueDate","category","_inputcategory","filter","item","task","render","uncompletedTasksRender","map","ev","b","index","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"\n// import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\n\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline';\nimport AddIcon from '@material-ui/icons/Add';\n\n// import DayPickerInput from 'react-day-picker/DayPickerInput'\n\n// import 'react-day-picker/lib/style.css';\n\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Typography } from '@material-ui/core';\nimport AddTask from './AddTask';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.completeTask = this.completeTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.getCategories = this.getCategories.bind(this);\n        this.addCategory = this.addCategory.bind(this);\n        this.setCategory = this.setCategory.bind(this);\n        this.removeCategory = this.removeCategory.bind(this);\n        this.filterTasks = this.filterTasks.bind(this);\n        this.toggleAddCategory = this.toggleAddCategory.bind(this);\n\n        this.state = {\n            taskList: [],\n            uncompletedTasks: [],\n            completedTasks: [],\n            selectedDate: null,\n            categories: [],\n            selectedCategory: null,\n            filters: [],\n            addingCategory: false,\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    async getCategories() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        console.log(\"categories\", categories);\n\n        this.setState({\n            categories: categories.data.categories,\n        })\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n       // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n\n        this.getCategories();\n    }\n\n    // Refreshes tasks shown on this page.\n    async refreshTasks() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Deletes a task.\n    async deleteTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Edits a task.\n    async editTask(id, newContent, newCategory, newDate) {\n        console.log(newDate);\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/editTask', {\n            key: id,\n            newContent: newContent,\n            newCategory: newCategory,\n            newDate: newDate,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        // this.refreshTasks();\n    }\n\n    // Marks a task as completed.\n    async completeTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Adds a new task\n    async addTask(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n                category: this.state.selectedCategory,\n            }\n            console.log(newTask)\n            // console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.refreshTasks();\n\n            this._inputElement.value = null;\n            this.setState({\n                selectedDate: null,\n                selectedCategory: null,\n            })\n        }\n    }\n\n    setCategory(category) {\n        this.setState({\n            selectedCategory: category,\n        })\n    }\n\n    async addCategory(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        if (this._inputcategory !== \"\") {\n            console.log(this._inputcategory);\n            await axios.post('http://localhost:8081/app/addCategory',\n            {\n                userId: auth0Client.getProfile().sub,\n                newCategory: this._inputcategory.value,\n            },\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            var categories = this.state.categories;\n            categories.push(this._inputcategory.value);\n            this.setState({\n                categories: categories,\n            })\n            this._inputcategory.value = null;\n            // this.getCategories();\n        }\n\n    }\n\n    async removeCategory(category) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        await axios.post('http://localhost:8081/app/removeCategory',\n        {\n            userId: auth0Client.getProfile().sub,\n            category: category,\n        },\n        {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var categories = this.state.categories.filter(item => item !== category);\n        this.setState({\n            categories: categories,\n        })\n        \n        // this.getCategories();\n        this.refreshTasks();\n    }\n\n    async filterTasks(category) {\n        var uncompletedTasks = this.state.taskList.filter(\n            task => task.completed == false\n        );\n        var completedTasks = this.state.taskList.filter(\n            task => task.completed == true\n        );\n\n        if (this.state.filters[0] == category) {\n            this.setState({\n                uncompletedTasks: uncompletedTasks,\n                completedTasks: completedTasks,\n                filters: [],\n            })\n            return;\n        }\n        var filters = [category];\n        uncompletedTasks = uncompletedTasks.filter(task => task.category == category);\n        completedTasks = completedTasks.filter(task => task.category == category);\n        this.setState({\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n            filters: filters,\n        })\n    }\n\n    toggleAddCategory() {\n        this.setState({\n            addingCategory: !this.state.addingCategory,\n        })\n    }\n\n    render() {\n        if (this.state.uncompletedTasks.length === 0) {\n            var uncompletedTasksRender = <div>You've completed all of your tasks!</div>\n        } else {\n            var uncompletedTasksRender = (\n                            this.state.uncompletedTasks.map(\n                                (task) => <Task \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            edit={this.editTask}\n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            categories={this.state.categories}\n                                            task={task} />\n                                            )\n            )\n        }\n\n\n        return (\n            <div id=\"main-Cont\" className=\"container\">\n                <div>\n                    <Paper className=\"sidebar\" variant=\"outlined\">\n                        {/* {!this.state.addingCategory && */}\n                        <div className=\"d-flex justify-content-between categories-label\">\n                            <Typography variant=\"h6\" component=\"h2\">\n                                Categories\n                            </Typography>\n                            <IconButton size=\"small\" aria-label=\"add new category\" onClick={() => this.toggleAddCategory()}>\n                                <AddIcon className=\"add-icon\" color=\"primary\"/>\n                            </IconButton>\n                        </div>\n                        {/* } */}\n                        {this.state.addingCategory && \n                        <form onBlur={() => this.toggleAddCategory()} onSubmit={this.addCategory} required id=\"addCategoryForm\" className=\"card-1 horiz form-group\">\n                            <TextField onKeyPress={(ev) => {\n                                if (ev.key === 'Enter') {\n                                    this.addCategory(ev);\n                                }\n                            }} className=\"textField\" inputRef={(b) => this._inputcategory = b} label=\"Add new Category\" variant=\"standard\" />\n                            <Button variant=\"contained\" className=\"submitButton\" color=\"primary\" onClick={this.addCategory}>Add</Button>\n                        </form>\n                        }\n                        <ul className=\"categories\">\n                        <FlipMove duration={250} easing=\"ease\">\n                            {this.state.categories.map(\n                                (category, index) => <li key={index} className={\"align-items-center sidebarCategory d-flex justify-content-between \" + (this.state.filters.indexOf(category) > -1 && \"selected\")}>\n                                                <div className=\"categoryLabel clickable\" onClick={() => this.filterTasks(category)}>{category}</div>\n                                                {/* <i class=\"fas fa-times\" onClick={() => this.removeCategory(category)}></i> */}\n                                                <IconButton className=\"hover-only\" aria-controls=\"delete-category\" onClick={() => this.removeCategory(category)} >\n                                                    <CloseIcon />\n                                                </IconButton>\n                                                </li>\n                                )}\n                                </FlipMove>\n                        </ul>\n                    </Paper>\n                </div>\n                <div className=\"main\">\n                <Paper variant=\"outlined\" className=\"TaskList\">\n                    {/* <div>\n                        <form onSubmit={this.addTask} id=\"addTaskForm\" className=\"card-1 form-group\">\n                            <TextField onKeyPress={(ev) => {\n                                if (ev.key === 'Enter') {\n                                    this.addTask(ev);\n                                }\n                            }} className=\"addNewTask\" required id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                            <KeyboardDatePicker\n                                clearable\n                                className=\"DatePicker\"\n                                value={this.state.selectedDate}\n                                onChange={(date) => this.updateDate(date)}\n                                label=\"Due Date\"\n                                format=\"MM/DD/yyyy\"\n                            />\n                            </MuiPickersUtilsProvider>\n                            <Button variant=\"contained\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                            <CategoryMenu label={this.state.selectedCategory} setCategory={this.setCategory} categories={this.state.categories} />\n                        </form>\n                    </div> */}\n                    <AddTask refreshTasks={this.refreshTasks} categories={this.state.categories} />\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {uncompletedTasksRender}\n                        </FlipMove>\n                    </ul>\n                    <div>{(this.state.completedTasks.length != 0) && \"Completed\"}</div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {\n                            this.state.completedTasks.map(\n                                (task) => <Task  \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            categories={this.state.categories}\n                                            task={task} />\n                                            )\n                        }\n                        </FlipMove>\n\n                    </ul>\n                </Paper>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}