{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/AddTask.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.setCategory = this.setCategory.bind(this);\n    this.state = {\n      selectedDate: null,\n      selectedCategory: null\n    };\n  }\n\n  async addTask(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate,\n        category: this.state.selectedCategory\n      };\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this._inputElement.value = null;\n      this.setState({\n        selectedDate: null,\n        selectedCategory: null\n      });\n      this.props.refreshTasks();\n    }\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  setCategory(category) {\n    this.setState({\n      selectedCategory: category\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      id: \"addTaskForm\",\n      className: \"card-1 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          this.addTask(ev);\n        }\n      },\n      className: \"addNewTask\",\n      required: true,\n      id: \"standard-basic\",\n      inputRef: a => this._inputElement = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      libInstance: moment,\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      clearable: true,\n      className: \"DatePicker\",\n      value: this.state.selectedDate,\n      onChange: date => this.updateDate(date),\n      label: \"Due Date\",\n      format: \"MM/DD/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(CategoryMenu, {\n      label: this.state.selectedCategory,\n      setCategory: this.setCategory,\n      categories: this.props.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/AddTask.js"],"names":["React","Component","TextField","Button","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","moment","CategoryMenu","auth0Client","axios","AddTask","constructor","props","addTask","bind","updateDate","setCategory","state","selectedDate","selectedCategory","e","isAuthenticated","history","push","preventDefault","_inputElement","newTask","userId","getProfile","sub","content","value","dueDate","category","post","headers","getIdToken","setState","refreshTasks","date","render","ev","key","a","categories"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.setCategory = this.setCategory.bind(this);\n\n        this.state = {\n            selectedDate: null,\n            selectedCategory: null,\n        }\n    }\n\n    async addTask(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n                category: this.state.selectedCategory,\n            }\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this._inputElement.value = null;\n            this.setState({\n                selectedDate: null,\n                selectedCategory: null,\n            })\n            this.props.refreshTasks();\n\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    setCategory(category) {\n        this.setState({\n            selectedCategory: category,\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.addTask} id=\"addTaskForm\" className=\"card-1 form-group\">\n                    <TextField onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            this.addTask(ev);\n                        }\n                    }} className=\"addNewTask\" required id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                    <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                    <KeyboardDatePicker\n                        clearable\n                        className=\"DatePicker\"\n                        value={this.state.selectedDate}\n                        onChange={(date) => this.updateDate(date)}\n                        label=\"Due Date\"\n                        format=\"MM/DD/yyyy\"\n                    />\n                    </MuiPickersUtilsProvider>\n                    <Button variant=\"contained\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                    <CategoryMenu label={this.state.selectedCategory} setCategory={this.setCategory} categories={this.props.categories} />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}