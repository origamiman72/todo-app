{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"; // import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\n\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\"; // import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import 'react-day-picker/lib/style.css';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.state = {\n      taskList: [],\n      uncompletedTasks: [],\n      completedTasks: [],\n      selectedDate: null\n    };\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    } // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    }); // tasks = tasks.data;\n    // console.log(tasks.data);\n    // console.log(questions);\n    // console.log(questions.todoTasks);\n\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Refreshes tasks shown on this page.\n\n\n  async refreshTasks() {\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Deletes a task.\n\n\n  async deleteTask(key) {\n    const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Edits a task.\n\n\n  async editTask(key, newContent) {\n    const attempt = await axios.post('http://localhost:8081/app/editTask', {\n      key: key,\n      newContent: newContent\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Marks a task as completed.\n\n\n  async completeTask(key) {\n    const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  }\n\n  async addTask(e) {\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate\n      }; // console.log(newTask);\n\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.refreshTasks();\n      this._inputElement.value = \"\";\n    }\n  }\n\n  render() {\n    if (this.state.uncompletedTasks.length === 0) {\n      var uncompletedTasksRender = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 42\n        }\n      }, \"You've completed all of your tasks!\");\n    } else {\n      var uncompletedTasksRender = this.state.uncompletedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n        key: task.date,\n        date: task.date,\n        edit: this.editTask,\n        complete: this.completeTask,\n        remove: this.deleteTask,\n        id: task._id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 43\n        }\n      }) // dueDate={task.dueDate} \n      // content={task.content} />\n      );\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      id: \"addTaskForm\",\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      libInstance: moment,\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      autoOk: true,\n      clearable: true,\n      value: this.state.selectedDate,\n      onChange: date => this.updateDate(date) // {/* // helperText=\"Clear Initial State\" */}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }, uncompletedTasksRender)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, this.state.completedTasks.length != 0 && \"Completed\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, this.state.completedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      className: \"completed\",\n      key: task.date,\n      complete: this.completeTask,\n      remove: this.deleteTask,\n      task: task,\n      date: task.date,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 43\n      }\n    }) // dueDate={task.dueDate} \n    // content={task.content} />\n    )))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","FlipMove","DatePicker","MuiPickersUtilsProvider","TextField","moment","MomentUtils","Button","TaskList","constructor","props","addTask","bind","editTask","deleteTask","completeTask","updateDate","state","taskList","uncompletedTasks","completedTasks","selectedDate","date","setState","componentDidMount","isAuthenticated","history","push","tasks","post","userId","getProfile","sub","headers","getIdToken","i","data","todoTasks","length","completed","refreshTasks","key","attempt","newContent","e","preventDefault","_inputElement","newTask","content","value","dueDate","render","uncompletedTasksRender","map","task","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"\n// import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\n\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\n\n\n// import DayPickerInput from 'react-day-picker/DayPickerInput'\n\n// import 'react-day-picker/lib/style.css';\n\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.completeTask = this.completeTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n\n        this.state = {\n            taskList: [],\n            uncompletedTasks: [],\n            completedTasks: [],\n            selectedDate: null,\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        // tasks = tasks.data;\n        // console.log(tasks.data);\n        // console.log(questions);\n        // console.log(questions.todoTasks);\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Refreshes tasks shown on this page.\n    async refreshTasks() {\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Deletes a task.\n    async deleteTask(key) {\n        const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Edits a task.\n    async editTask(key, newContent) {\n        const attempt = await axios.post('http://localhost:8081/app/editTask', {\n            key: key,\n            newContent: newContent,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Marks a task as completed.\n    async completeTask(key) {\n        const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    async addTask(e) {\n\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n            }\n            // console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.refreshTasks();\n\n            this._inputElement.value = \"\";\n        }\n    }\n\n    render() {\n        if (this.state.uncompletedTasks.length === 0) {\n            var uncompletedTasksRender = <div>You've completed all of your tasks!</div>\n        } else {\n            var uncompletedTasksRender = (\n                            this.state.uncompletedTasks.map(\n                                (task) => <Task \n                                            key={task.date} \n                                            date={task.date} \n                                            edit={this.editTask}\n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            id={task._id} \n                                            task={task} />\n                                            // dueDate={task.dueDate} \n                                            // content={task.content} />\n                                            )\n            )\n        }\n\n        return (\n            <div className=\"container\">\n                <div className=\"TaskList\">\n                    <div>\n                        <form onSubmit={this.addTask} id=\"addTaskForm\" className=\"form-group\">\n                            {/* <input className=\"\" placeholder=\"Add new Task\" ref={(a) => this._inputElement = a} */}\n                                {/* type=\"text\"></input> */}\n                            <TextField id=\"standard-basic\" label=\"Add new Task\" variant=\"standard\" />\n                            {/* <DatePicker className=\"DatePicker\" showTimeSelect placeholderText=\"Due Date\" selected={this.state.selectedDate} onChange={(date) => {this.updateDate(date)}} /> */}\n                            {/* <DayPickerInput /> */}\n                            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                            <DatePicker\n                                autoOk\n                                clearable\n                                value={this.state.selectedDate}\n                                onChange={(date) => this.updateDate(date)}\n                                // {/* // helperText=\"Clear Initial State\" */}\n                            />\n                            </MuiPickersUtilsProvider>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                        </form>\n                    </div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {uncompletedTasksRender}\n                        </FlipMove>\n                    </ul>\n                    <div>{(this.state.completedTasks.length != 0) && \"Completed\"}</div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {\n                            this.state.completedTasks.map(\n                                (task) => <Task  \n                                            className=\"completed\"\n                                            key={task.date} \n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            task={task} \n                                            date={task.date} />\n                                            // dueDate={task.dueDate} \n                                            // content={task.content} />\n                                            )\n                        }\n                        </FlipMove>\n\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}