{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.state = {\n      taskList: [],\n      dateObject: moment()\n    };\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.setState({\n      taskList: tasks.data.todoTasks\n    });\n  }\n\n  render() {\n    var weekdayshort = moment.weekdaysShort();\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        className: \"calendar-day empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 1; d <= this.state.dateObject.daysInMonth(); d++) {\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, d));\n    }\n\n    let relevantTasks = [];\n\n    for (let i = 0; i < this.state.taskList.length; i++) {\n      var curr = this.state.taskList[i];\n\n      if (curr.dueDate) {\n        if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n          relevantTasks.push(curr);\n        }\n      }\n    }\n\n    for (let i = 0; i < daysInMonth.length; i++) {\n      var currDay = daysInMonth[i];\n      var todayTasks = [];\n\n      for (let j = 0; j < relevantTasks.length; j++) {\n        var currTask = relevantTasks[j];\n\n        if (moment(currTask.dueDate).date() == currDay.key) {\n          todayTasks.push(currTask);\n        }\n      }\n\n      let currentDay = currDay.key == moment().date() ? \"today\" : \"\";\n      daysInMonth[i] = /*#__PURE__*/React.createElement(\"td\", {\n        key: daysInMonth[i].key,\n        className: `calendar-day ${currentDay}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 30\n        }\n      }, daysInMonth[i].key, /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, todayTasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 47\n        }\n      }, task.content))));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let weekdayshortname = weekdayshort.map(day => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: day,\n        className: \"weekday-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 20\n        }\n      }, d);\n    });\n    return (\n      /*#__PURE__*/\n      // <div>Calendar</div>\n      React.createElement(\"div\", {\n        className: \"container d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar-month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }\n      }, this.state.dateObject.format(\"MMMM\")), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }\n      }, weekdayshortname)), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, daysinmonth))))\n    );\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js"],"names":["React","Component","moment","auth0Client","axios","Task","Calendar","constructor","props","firstDayOfMonth","dateObject","state","firstDay","startOf","format","taskList","componentDidMount","isAuthenticated","history","push","tasks","post","userId","getProfile","sub","headers","getIdToken","setState","data","todoTasks","render","weekdayshort","weekdaysShort","blanks","i","daysInMonth","d","relevantTasks","length","curr","dueDate","month","currDay","todayTasks","j","currTask","date","key","currentDay","map","task","content","totalSlots","rows","cells","forEach","row","weekdayshortname","day","daysinmonth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [],\n            dateObject: moment(),\n        }\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n        })\n    }\n\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n        return firstDay;\n    }\n\n    render() {\n        var weekdayshort = moment.weekdaysShort();\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(\n            <td className=\"calendar-day empty\">{\"\"}</td>\n            )\n        }\n        let daysInMonth = [];\n        for (let d = 1; d <= this.state.dateObject.daysInMonth(); d++) {\n            daysInMonth.push(\n                <td key={d} className=\"calendar-day\">\n                    {d}\n                </td>\n            );\n        }\n\n        let relevantTasks = [];\n        for (let i = 0; i < this.state.taskList.length; i++) {\n            var curr = this.state.taskList[i];\n            if (curr.dueDate) {\n                if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n                    relevantTasks.push(curr);\n                }\n            }\n        }\n\n        for (let i = 0; i < daysInMonth.length; i++) {\n            var currDay = daysInMonth[i];\n            var todayTasks = [];\n            for (let j = 0; j < relevantTasks.length; j++) {\n                var currTask = relevantTasks[j];\n                if (moment(currTask.dueDate).date() == currDay.key) {\n                    todayTasks.push(currTask);\n                }\n\n            }\n            let currentDay = currDay.key == moment().date() ? \"today\" : \"\";   \n            daysInMonth[i] = <td key={daysInMonth[i].key} className={`calendar-day ${currentDay}`}>\n\n                {daysInMonth[i].key}\n                <ul>\n                    {todayTasks.map((task) => <li>{task.content}</li>)}\n                </ul>\n            </td>\n        }\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                rows.push(cells);\n            }\n        });\n\n        let weekdayshortname = weekdayshort.map(day => {\n            return (\n                <th key={day} className=\"weekday-label\">\n                    {day}\n                </th>\n            )\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>\n        })\n\n        return (\n            // <div>Calendar</div>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"calendar\">\n                    <div className=\"calendar-month\">{this.state.dateObject.format(\"MMMM\")}</div>\n                    <table className=\"\">\n                        <thead>\n                            <tr>{weekdayshortname}</tr>\n                        </thead>\n                        <tbody>{daysinmonth}</tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}