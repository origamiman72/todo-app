{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"; // import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\n\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline'; // import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import 'react-day-picker/lib/style.css';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.addCategory = this.addCategory.bind(this);\n    this.setCategory = this.setCategory.bind(this);\n    this.removeCategory = this.removeCategory.bind(this);\n    this.filterTasks = this.filterTasks.bind(this);\n    this.state = {\n      taskList: [],\n      uncompletedTasks: [],\n      completedTasks: [],\n      selectedDate: null,\n      categories: [],\n      selectedCategory: null,\n      filters: []\n    };\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  async getCategories() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    console.log(\"categories\", categories);\n    this.setState({\n      categories: categories.data.categories\n    });\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    } // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n    this.getCategories();\n  } // Refreshes tasks shown on this page.\n\n\n  async refreshTasks() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Deletes a task.\n\n\n  async deleteTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Edits a task.\n\n\n  async editTask(key, newContent, newCategory) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/editTask', {\n      key: key,\n      newContent: newContent,\n      newCategory: newCategory\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Marks a task as completed.\n\n\n  async completeTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Adds a new task\n\n\n  async addTask(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate,\n        category: this.state.selectedCategory\n      };\n      console.log(newTask); // console.log(newTask);\n\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.refreshTasks();\n      this._inputElement.value = null;\n      this.setState({\n        selectedDate: null,\n        selectedCategory: null\n      });\n    }\n  }\n\n  setCategory(category) {\n    this.setState({\n      selectedCategory: category\n    });\n  }\n\n  async addCategory(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault();\n\n    if (this._inputcategory !== \"\") {\n      console.log(this._inputcategory);\n      await axios.post('http://localhost:8081/app/addCategory', {\n        userId: auth0Client.getProfile().sub,\n        newCategory: this._inputcategory.value\n      }, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this._inputcategory.value = null;\n      this.getCategories();\n    }\n  }\n\n  async removeCategory(category) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    await axios.post('http://localhost:8081/app/removeCategory', {\n      userId: auth0Client.getProfile().sub,\n      category: category\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.getCategories();\n    this.refreshTasks();\n  }\n\n  async filterTasks(category) {\n    var uncompletedTasks = this.state.taskList.filter(task => task.completed == false);\n    var completedTasks = this.state.taskList.filter(task => task.completed == true);\n\n    if (this.state.filters[0] == category) {\n      this.setState({\n        uncompletedTasks: uncompletedTasks,\n        completedTasks: completedTasks,\n        filters: []\n      });\n    }\n\n    var filters = [category];\n    console.log(category);\n    uncompletedTasks = uncompletedTasks.filter(task => task.category == category);\n    completedTasks = completedTasks.filter(task => task.category == category);\n    console.log(completedTasks);\n    this.setState({\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks,\n      filters: filters\n    });\n  }\n\n  render() {\n    if (this.state.uncompletedTasks.length === 0) {\n      var uncompletedTasksRender = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 42\n        }\n      }, \"You've completed all of your tasks!\");\n    } else {\n      var uncompletedTasksRender = this.state.uncompletedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n        displayMenu: true,\n        displayDate: true,\n        key: task.date,\n        edit: this.editTask,\n        complete: this.completeTask,\n        remove: this.deleteTask,\n        categories: this.state.categories,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 43\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-Cont\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"sidebar\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addCategory,\n      required: true,\n      id: \"addCategoryForm\",\n      className: \"card-1 horiz form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          this.addCategory(ev);\n        }\n      },\n      className: \"textField\",\n      inputRef: b => this._inputcategory = b,\n      label: \"Add new Category\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(\"ul\", {\n      className: \"categories\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 25\n      }\n    }, this.state.categories.map((category, index) => /*#__PURE__*/React.createElement(\"li\", {\n      key: index,\n      className: \"align-items-center sidebarCategory d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"categoryLabel\",\n      onClick: () => this.filterTasks(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 49\n      }\n    }, category), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"hover-only\",\n      \"aria-controls\": \"delete-category\",\n      onClick: () => this.removeCategory(category),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CloseIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 53\n      }\n    }))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      id: \"addTaskForm\",\n      className: \"card-1 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          this.addTask(ev);\n        }\n      },\n      className: \"addNewTask\",\n      required: true,\n      id: \"standard-basic\",\n      inputRef: a => this._inputElement = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      libInstance: moment,\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: \"DatePicker\",\n      value: this.state.selectedDate,\n      onChange: date => this.updateDate(date),\n      label: \"Due Date\",\n      format: \"MM/DD/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(CategoryMenu, {\n      label: this.state.selectedCategory,\n      setCategory: this.setCategory,\n      categories: this.state.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 25\n      }\n    }, uncompletedTasksRender)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 21\n      }\n    }, this.state.completedTasks.length != 0 && \"Completed\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 25\n      }\n    }, this.state.completedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      displayMenu: true,\n      displayDate: true,\n      key: task.date,\n      complete: this.completeTask,\n      remove: this.deleteTask,\n      categories: this.state.categories,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 43\n      }\n    })))))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","FlipMove","KeyboardDatePicker","MuiPickersUtilsProvider","TextField","CategoryMenu","moment","MomentUtils","Paper","Button","IconButton","CloseIcon","TaskList","constructor","props","addTask","bind","editTask","deleteTask","completeTask","updateDate","getCategories","addCategory","setCategory","removeCategory","filterTasks","state","taskList","uncompletedTasks","completedTasks","selectedDate","categories","selectedCategory","filters","date","setState","isAuthenticated","history","push","post","userId","getProfile","sub","headers","getIdToken","console","log","data","componentDidMount","tasks","i","todoTasks","length","completed","refreshTasks","key","attempt","newContent","newCategory","e","preventDefault","_inputElement","newTask","content","value","dueDate","category","_inputcategory","filter","task","render","uncompletedTasksRender","map","ev","b","index","a"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"\n// import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\n\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline';\n\n// import DayPickerInput from 'react-day-picker/DayPickerInput'\n\n// import 'react-day-picker/lib/style.css';\n\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.completeTask = this.completeTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.getCategories = this.getCategories.bind(this);\n        this.addCategory = this.addCategory.bind(this);\n        this.setCategory = this.setCategory.bind(this);\n        this.removeCategory = this.removeCategory.bind(this);\n        this.filterTasks = this.filterTasks.bind(this);\n\n        this.state = {\n            taskList: [],\n            uncompletedTasks: [],\n            completedTasks: [],\n            selectedDate: null,\n            categories: [],\n            selectedCategory: null,\n            filters: [],\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    async getCategories() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        console.log(\"categories\", categories);\n\n        this.setState({\n            categories: categories.data.categories,\n        })\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n       // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n\n        this.getCategories();\n    }\n\n    // Refreshes tasks shown on this page.\n    async refreshTasks() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Deletes a task.\n    async deleteTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Edits a task.\n    async editTask(key, newContent, newCategory) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/editTask', {\n            key: key,\n            newContent: newContent,\n            newCategory: newCategory,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Marks a task as completed.\n    async completeTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Adds a new task\n    async addTask(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n                category: this.state.selectedCategory,\n            }\n            console.log(newTask)\n            // console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.refreshTasks();\n\n            this._inputElement.value = null;\n            this.setState({\n                selectedDate: null,\n                selectedCategory: null,\n            })\n        }\n    }\n\n    setCategory(category) {\n        this.setState({\n            selectedCategory: category,\n        })\n    }\n\n    async addCategory(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        if (this._inputcategory !== \"\") {\n            console.log(this._inputcategory);\n            await axios.post('http://localhost:8081/app/addCategory',\n            {\n                userId: auth0Client.getProfile().sub,\n                newCategory: this._inputcategory.value,\n            },\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this._inputcategory.value = null;\n            this.getCategories();\n        }\n\n    }\n\n    async removeCategory(category) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        await axios.post('http://localhost:8081/app/removeCategory',\n        {\n            userId: auth0Client.getProfile().sub,\n            category: category,\n        },\n        {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        this.getCategories();\n        this.refreshTasks();\n    }\n\n    async filterTasks(category) {\n        var uncompletedTasks = this.state.taskList.filter(\n            task => task.completed == false\n        );\n        var completedTasks = this.state.taskList.filter(\n            task => task.completed == true\n        );\n\n        if (this.state.filters[0] == category) {\n            this.setState({\n                uncompletedTasks: uncompletedTasks,\n                completedTasks: completedTasks,\n                filters: [],\n            })\n        }\n        var filters = [category];\n        console.log(category);\n        uncompletedTasks = uncompletedTasks.filter(task => task.category == category);\n        completedTasks = completedTasks.filter(task => task.category == category);\n        console.log(completedTasks);\n        this.setState({\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n            filters: filters,\n        })\n    }\n\n\n    render() {\n        if (this.state.uncompletedTasks.length === 0) {\n            var uncompletedTasksRender = <div>You've completed all of your tasks!</div>\n        } else {\n            var uncompletedTasksRender = (\n                            this.state.uncompletedTasks.map(\n                                (task) => <Task \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            edit={this.editTask}\n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            categories={this.state.categories}\n                                            task={task} />\n                                            )\n            )\n        }\n\n        return (\n            <div id=\"main-Cont\" className=\"container\">\n                <div>\n                    <Paper className=\"sidebar\" variant=\"outlined\">\n                        <form onSubmit={this.addCategory} required id=\"addCategoryForm\" className=\"card-1 horiz form-group\">\n                            <TextField onKeyPress={(ev) => {\n                                if (ev.key === 'Enter') {\n                                    this.addCategory(ev);\n                                }\n                            }} className=\"textField\" inputRef={(b) => this._inputcategory = b} label=\"Add new Category\" variant=\"standard\" />\n                            <Button variant=\"outlined\" className=\"submitButton\" color=\"primary\" onClick={this.addCategory}>Add</Button>\n                        </form>\n                        <ul className=\"categories\">\n                            {this.state.categories.map(\n                                (category, index) => <li key={index} className=\"align-items-center sidebarCategory d-flex justify-content-between\">\n                                                <div className=\"categoryLabel\" onClick={() => this.filterTasks(category)}>{category}</div>\n                                                {/* <i class=\"fas fa-times\" onClick={() => this.removeCategory(category)}></i> */}\n                                                <IconButton className=\"hover-only\" aria-controls=\"delete-category\" onClick={() => this.removeCategory(category)} >\n                                                    <CloseIcon />\n                                                </IconButton>\n                                                </li>\n                                )}\n                        </ul>\n                    </Paper>\n                </div>\n                <div className=\"main\">\n                <Paper variant=\"outlined\" className=\"TaskList\">\n                    <div>\n                        <form onSubmit={this.addTask} id=\"addTaskForm\" className=\"card-1 form-group\">\n                            <TextField onKeyPress={(ev) => {\n                                if (ev.key === 'Enter') {\n                                    this.addTask(ev);\n                                }\n                            }} className=\"addNewTask\" required id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                            <KeyboardDatePicker\n                                className=\"DatePicker\"\n                                value={this.state.selectedDate}\n                                onChange={(date) => this.updateDate(date)}\n                                label=\"Due Date\"\n                                format=\"MM/DD/yyyy\"\n                            />\n                            </MuiPickersUtilsProvider>\n                            <Button variant=\"outlined\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                            <CategoryMenu label={this.state.selectedCategory} setCategory={this.setCategory} categories={this.state.categories} />\n                        </form>\n                    </div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {uncompletedTasksRender}\n                        </FlipMove>\n                    </ul>\n                    <div>{(this.state.completedTasks.length != 0) && \"Completed\"}</div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {\n                            this.state.completedTasks.map(\n                                (task) => <Task  \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            categories={this.state.categories}\n                                            task={task} />\n                                            )\n                        }\n                        </FlipMove>\n\n                    </ul>\n                </Paper>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}