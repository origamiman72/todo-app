{"ast":null,"code":"import defaultMoment from 'moment';\nvar defaultFormats = {\n  normalDateWithWeekday: \"ddd, MMM D\",\n  normalDate: \"D MMMM\",\n  shortDate: \"MMM D\",\n  monthAndDate: \"MMMM D\",\n  dayOfMonth: \"D\",\n  year: \"YYYY\",\n  month: \"MMMM\",\n  monthShort: \"MMM\",\n  monthAndYear: \"MMMM YYYY\",\n  minutes: \"mm\",\n  hours12h: \"hh\",\n  hours24h: \"HH\",\n  seconds: \"ss\",\n  fullTime: \"LT\",\n  fullTime12h: \"hh:mm A\",\n  fullTime24h: \"HH:mm\",\n  fullDate: \"ll\",\n  fullDateTime: \"lll\",\n  fullDateTime12h: \"ll hh:mm A\",\n  fullDateTime24h: \"ll HH:mm\",\n  keyboardDate: \"L\",\n  keyboardDateTime: \"L LT\",\n  keyboardDateTime12h: \"L hh:mm A\",\n  keyboardDateTime24h: \"L HH:mm\"\n};\n\nvar MomentUtils =\n/** @class */\nfunction () {\n  function MomentUtils(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        locale = _b.locale,\n        formats = _b.formats,\n        instance = _b.instance;\n\n    this.moment = instance || defaultMoment;\n    this.locale = locale;\n    this.formats = Object.assign({}, defaultFormats, formats);\n  }\n\n  MomentUtils.prototype.is12HourCycleInCurrentLocale = function () {\n    return /A|a/.test(this.moment().localeData().longDateFormat(\"LT\"));\n  };\n\n  MomentUtils.prototype.getFormatHelperText = function (format) {\n    var _this = this; // @see https://github.com/moment/moment/blob/develop/src/lib/format/format.js#L6\n\n\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})|./g;\n    return format.match(localFormattingTokens).map(function (token) {\n      var firstCharacter = token[0];\n\n      if (firstCharacter === \"L\" || firstCharacter === \";\") {\n        return _this.moment.localeData().longDateFormat(token);\n      }\n\n      return token;\n    }).join(\"\").replace(/a/gi, \"(a|p)m\").toLocaleLowerCase();\n  };\n\n  MomentUtils.prototype.getCurrentLocaleCode = function () {\n    return this.locale || this.moment.locale();\n  };\n\n  MomentUtils.prototype.parse = function (value, format) {\n    if (value === \"\") {\n      return null;\n    }\n\n    return this.moment(value, format, true);\n  };\n\n  MomentUtils.prototype.date = function (value) {\n    if (value === null) {\n      return null;\n    }\n\n    var moment = this.moment(value);\n    moment.locale(this.locale);\n    return moment;\n  };\n\n  MomentUtils.prototype.toJsDate = function (value) {\n    return value.toDate();\n  };\n\n  MomentUtils.prototype.isValid = function (value) {\n    return this.moment(value).isValid();\n  };\n\n  MomentUtils.prototype.isNull = function (date) {\n    return date === null;\n  };\n\n  MomentUtils.prototype.getDiff = function (date, comparing) {\n    return date.diff(comparing);\n  };\n\n  MomentUtils.prototype.isAfter = function (date, value) {\n    return date.isAfter(value);\n  };\n\n  MomentUtils.prototype.isBefore = function (date, value) {\n    return date.isBefore(value);\n  };\n\n  MomentUtils.prototype.isAfterDay = function (date, value) {\n    return date.isAfter(value, \"day\");\n  };\n\n  MomentUtils.prototype.isBeforeDay = function (date, value) {\n    return date.isBefore(value, \"day\");\n  };\n\n  MomentUtils.prototype.isBeforeYear = function (date, value) {\n    return date.isBefore(value, \"year\");\n  };\n\n  MomentUtils.prototype.isAfterYear = function (date, value) {\n    return date.isAfter(value, \"year\");\n  };\n\n  MomentUtils.prototype.startOfDay = function (date) {\n    return date.clone().startOf(\"day\");\n  };\n\n  MomentUtils.prototype.endOfDay = function (date) {\n    return date.clone().endOf(\"day\");\n  };\n\n  MomentUtils.prototype.format = function (date, formatKey) {\n    return this.formatByString(date, this.formats[formatKey]);\n  };\n\n  MomentUtils.prototype.formatByString = function (date, formatString) {\n    date.locale(this.locale);\n    return date.format(formatString);\n  };\n\n  MomentUtils.prototype.formatNumber = function (numberToFormat) {\n    return numberToFormat;\n  };\n\n  MomentUtils.prototype.getHours = function (date) {\n    return date.get(\"hours\");\n  };\n\n  MomentUtils.prototype.addDays = function (date, count) {\n    return count < 0 ? date.clone().subtract(Math.abs(count), \"days\") : date.clone().add(count, \"days\");\n  };\n\n  MomentUtils.prototype.addMonths = function (date, count) {\n    return count < 0 ? date.clone().subtract(Math.abs(count), \"months\") : date.clone().add(count, \"months\");\n  };\n\n  MomentUtils.prototype.setHours = function (date, count) {\n    return date.clone().hours(count);\n  };\n\n  MomentUtils.prototype.getMinutes = function (date) {\n    return date.get(\"minutes\");\n  };\n\n  MomentUtils.prototype.setMinutes = function (date, count) {\n    return date.clone().minutes(count);\n  };\n\n  MomentUtils.prototype.getSeconds = function (date) {\n    return date.get(\"seconds\");\n  };\n\n  MomentUtils.prototype.setSeconds = function (date, count) {\n    return date.clone().seconds(count);\n  };\n\n  MomentUtils.prototype.getMonth = function (date) {\n    return date.get(\"month\");\n  };\n\n  MomentUtils.prototype.isSameDay = function (date, comparing) {\n    return date.isSame(comparing, \"day\");\n  };\n\n  MomentUtils.prototype.isSameMonth = function (date, comparing) {\n    return date.isSame(comparing, \"month\");\n  };\n\n  MomentUtils.prototype.isSameYear = function (date, comparing) {\n    return date.isSame(comparing, \"year\");\n  };\n\n  MomentUtils.prototype.isSameHour = function (date, comparing) {\n    return date.isSame(comparing, \"hour\");\n  };\n\n  MomentUtils.prototype.setMonth = function (date, count) {\n    return date.clone().month(count);\n  };\n\n  MomentUtils.prototype.getMeridiemText = function (ampm) {\n    return ampm === \"am\" ? \"AM\" : \"PM\";\n  };\n\n  MomentUtils.prototype.startOfMonth = function (date) {\n    return date.clone().startOf(\"month\");\n  };\n\n  MomentUtils.prototype.endOfMonth = function (date) {\n    return date.clone().endOf(\"month\");\n  };\n\n  MomentUtils.prototype.startOfWeek = function (date) {\n    return date.clone().startOf(\"week\");\n  };\n\n  MomentUtils.prototype.endOfWeek = function (date) {\n    return date.clone().endOf(\"week\");\n  };\n\n  MomentUtils.prototype.getNextMonth = function (date) {\n    return date.clone().add(1, \"month\");\n  };\n\n  MomentUtils.prototype.getPreviousMonth = function (date) {\n    return date.clone().subtract(1, \"month\");\n  };\n\n  MomentUtils.prototype.getMonthArray = function (date) {\n    var firstMonth = date.clone().startOf(\"year\");\n    var monthArray = [firstMonth];\n\n    while (monthArray.length < 12) {\n      var prevMonth = monthArray[monthArray.length - 1];\n      monthArray.push(this.getNextMonth(prevMonth));\n    }\n\n    return monthArray;\n  };\n\n  MomentUtils.prototype.getYear = function (date) {\n    return date.get(\"year\");\n  };\n\n  MomentUtils.prototype.setYear = function (date, year) {\n    return date.clone().set(\"year\", year);\n  };\n\n  MomentUtils.prototype.mergeDateAndTime = function (date, time) {\n    return date.hour(time.hour()).minute(time.minute()).second(time.second());\n  };\n\n  MomentUtils.prototype.getWeekdays = function () {\n    return this.moment.weekdaysShort(true);\n  };\n\n  MomentUtils.prototype.isEqual = function (value, comparing) {\n    if (value === null && comparing === null) {\n      return true;\n    }\n\n    return this.moment(value).isSame(comparing);\n  };\n\n  MomentUtils.prototype.getWeekArray = function (date) {\n    var start = date.clone().startOf(\"month\").startOf(\"week\");\n    var end = date.clone().endOf(\"month\").endOf(\"week\");\n    var count = 0;\n    var current = start;\n    var nestedWeeks = [];\n\n    while (current.isBefore(end)) {\n      var weekNumber = Math.floor(count / 7);\n      nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n      nestedWeeks[weekNumber].push(current);\n      current = current.clone().add(1, \"day\");\n      count += 1;\n    }\n\n    return nestedWeeks;\n  };\n\n  MomentUtils.prototype.getYearRange = function (start, end) {\n    var startDate = this.moment(start).startOf(\"year\");\n    var endDate = this.moment(end).endOf(\"year\");\n    var years = [];\n    var current = startDate;\n\n    while (current.isBefore(endDate)) {\n      years.push(current);\n      current = current.clone().add(1, \"year\");\n    }\n\n    return years;\n  };\n\n  MomentUtils.prototype.isWithinRange = function (date, _a) {\n    var start = _a[0],\n        end = _a[1];\n    return date.isBetween(start, end, null, \"[]\");\n  };\n\n  return MomentUtils;\n}();\n\nexport default MomentUtils;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/node_modules/@date-io/moment/build/index.esm.js"],"names":["defaultMoment","defaultFormats","normalDateWithWeekday","normalDate","shortDate","monthAndDate","dayOfMonth","year","month","monthShort","monthAndYear","minutes","hours12h","hours24h","seconds","fullTime","fullTime12h","fullTime24h","fullDate","fullDateTime","fullDateTime12h","fullDateTime24h","keyboardDate","keyboardDateTime","keyboardDateTime12h","keyboardDateTime24h","MomentUtils","_a","_b","locale","formats","instance","moment","Object","assign","prototype","is12HourCycleInCurrentLocale","test","localeData","longDateFormat","getFormatHelperText","format","_this","localFormattingTokens","match","map","token","firstCharacter","join","replace","toLocaleLowerCase","getCurrentLocaleCode","parse","value","date","toJsDate","toDate","isValid","isNull","getDiff","comparing","diff","isAfter","isBefore","isAfterDay","isBeforeDay","isBeforeYear","isAfterYear","startOfDay","clone","startOf","endOfDay","endOf","formatKey","formatByString","formatString","formatNumber","numberToFormat","getHours","get","addDays","count","subtract","Math","abs","add","addMonths","setHours","hours","getMinutes","setMinutes","getSeconds","setSeconds","getMonth","isSameDay","isSame","isSameMonth","isSameYear","isSameHour","setMonth","getMeridiemText","ampm","startOfMonth","endOfMonth","startOfWeek","endOfWeek","getNextMonth","getPreviousMonth","getMonthArray","firstMonth","monthArray","length","prevMonth","push","getYear","setYear","set","mergeDateAndTime","time","hour","minute","second","getWeekdays","weekdaysShort","isEqual","getWeekArray","start","end","current","nestedWeeks","weekNumber","floor","getYearRange","startDate","endDate","years","isWithinRange","isBetween"],"mappings":"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","sourcesContent":["import defaultMoment from 'moment';\n\nvar defaultFormats = {\n    normalDateWithWeekday: \"ddd, MMM D\",\n    normalDate: \"D MMMM\",\n    shortDate: \"MMM D\",\n    monthAndDate: \"MMMM D\",\n    dayOfMonth: \"D\",\n    year: \"YYYY\",\n    month: \"MMMM\",\n    monthShort: \"MMM\",\n    monthAndYear: \"MMMM YYYY\",\n    minutes: \"mm\",\n    hours12h: \"hh\",\n    hours24h: \"HH\",\n    seconds: \"ss\",\n    fullTime: \"LT\",\n    fullTime12h: \"hh:mm A\",\n    fullTime24h: \"HH:mm\",\n    fullDate: \"ll\",\n    fullDateTime: \"lll\",\n    fullDateTime12h: \"ll hh:mm A\",\n    fullDateTime24h: \"ll HH:mm\",\n    keyboardDate: \"L\",\n    keyboardDateTime: \"L LT\",\n    keyboardDateTime12h: \"L hh:mm A\",\n    keyboardDateTime24h: \"L HH:mm\"\n};\nvar MomentUtils = /** @class */ (function () {\n    function MomentUtils(_a) {\n        var _b = _a === void 0 ? {} : _a, locale = _b.locale, formats = _b.formats, instance = _b.instance;\n        this.moment = instance || defaultMoment;\n        this.locale = locale;\n        this.formats = Object.assign({}, defaultFormats, formats);\n    }\n    MomentUtils.prototype.is12HourCycleInCurrentLocale = function () {\n        return /A|a/.test(this.moment()\n            .localeData()\n            .longDateFormat(\"LT\"));\n    };\n    MomentUtils.prototype.getFormatHelperText = function (format) {\n        var _this = this;\n        // @see https://github.com/moment/moment/blob/develop/src/lib/format/format.js#L6\n        var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})|./g;\n        return format\n            .match(localFormattingTokens)\n            .map(function (token) {\n            var firstCharacter = token[0];\n            if (firstCharacter === \"L\" || firstCharacter === \";\") {\n                return _this.moment.localeData().longDateFormat(token);\n            }\n            return token;\n        })\n            .join(\"\")\n            .replace(/a/gi, \"(a|p)m\")\n            .toLocaleLowerCase();\n    };\n    MomentUtils.prototype.getCurrentLocaleCode = function () {\n        return this.locale || this.moment.locale();\n    };\n    MomentUtils.prototype.parse = function (value, format) {\n        if (value === \"\") {\n            return null;\n        }\n        return this.moment(value, format, true);\n    };\n    MomentUtils.prototype.date = function (value) {\n        if (value === null) {\n            return null;\n        }\n        var moment = this.moment(value);\n        moment.locale(this.locale);\n        return moment;\n    };\n    MomentUtils.prototype.toJsDate = function (value) {\n        return value.toDate();\n    };\n    MomentUtils.prototype.isValid = function (value) {\n        return this.moment(value).isValid();\n    };\n    MomentUtils.prototype.isNull = function (date) {\n        return date === null;\n    };\n    MomentUtils.prototype.getDiff = function (date, comparing) {\n        return date.diff(comparing);\n    };\n    MomentUtils.prototype.isAfter = function (date, value) {\n        return date.isAfter(value);\n    };\n    MomentUtils.prototype.isBefore = function (date, value) {\n        return date.isBefore(value);\n    };\n    MomentUtils.prototype.isAfterDay = function (date, value) {\n        return date.isAfter(value, \"day\");\n    };\n    MomentUtils.prototype.isBeforeDay = function (date, value) {\n        return date.isBefore(value, \"day\");\n    };\n    MomentUtils.prototype.isBeforeYear = function (date, value) {\n        return date.isBefore(value, \"year\");\n    };\n    MomentUtils.prototype.isAfterYear = function (date, value) {\n        return date.isAfter(value, \"year\");\n    };\n    MomentUtils.prototype.startOfDay = function (date) {\n        return date.clone().startOf(\"day\");\n    };\n    MomentUtils.prototype.endOfDay = function (date) {\n        return date.clone().endOf(\"day\");\n    };\n    MomentUtils.prototype.format = function (date, formatKey) {\n        return this.formatByString(date, this.formats[formatKey]);\n    };\n    MomentUtils.prototype.formatByString = function (date, formatString) {\n        date.locale(this.locale);\n        return date.format(formatString);\n    };\n    MomentUtils.prototype.formatNumber = function (numberToFormat) {\n        return numberToFormat;\n    };\n    MomentUtils.prototype.getHours = function (date) {\n        return date.get(\"hours\");\n    };\n    MomentUtils.prototype.addDays = function (date, count) {\n        return count < 0\n            ? date.clone().subtract(Math.abs(count), \"days\")\n            : date.clone().add(count, \"days\");\n    };\n    MomentUtils.prototype.addMonths = function (date, count) {\n        return count < 0\n            ? date.clone().subtract(Math.abs(count), \"months\")\n            : date.clone().add(count, \"months\");\n    };\n    MomentUtils.prototype.setHours = function (date, count) {\n        return date.clone().hours(count);\n    };\n    MomentUtils.prototype.getMinutes = function (date) {\n        return date.get(\"minutes\");\n    };\n    MomentUtils.prototype.setMinutes = function (date, count) {\n        return date.clone().minutes(count);\n    };\n    MomentUtils.prototype.getSeconds = function (date) {\n        return date.get(\"seconds\");\n    };\n    MomentUtils.prototype.setSeconds = function (date, count) {\n        return date.clone().seconds(count);\n    };\n    MomentUtils.prototype.getMonth = function (date) {\n        return date.get(\"month\");\n    };\n    MomentUtils.prototype.isSameDay = function (date, comparing) {\n        return date.isSame(comparing, \"day\");\n    };\n    MomentUtils.prototype.isSameMonth = function (date, comparing) {\n        return date.isSame(comparing, \"month\");\n    };\n    MomentUtils.prototype.isSameYear = function (date, comparing) {\n        return date.isSame(comparing, \"year\");\n    };\n    MomentUtils.prototype.isSameHour = function (date, comparing) {\n        return date.isSame(comparing, \"hour\");\n    };\n    MomentUtils.prototype.setMonth = function (date, count) {\n        return date.clone().month(count);\n    };\n    MomentUtils.prototype.getMeridiemText = function (ampm) {\n        return ampm === \"am\" ? \"AM\" : \"PM\";\n    };\n    MomentUtils.prototype.startOfMonth = function (date) {\n        return date.clone().startOf(\"month\");\n    };\n    MomentUtils.prototype.endOfMonth = function (date) {\n        return date.clone().endOf(\"month\");\n    };\n    MomentUtils.prototype.startOfWeek = function (date) {\n        return date.clone().startOf(\"week\");\n    };\n    MomentUtils.prototype.endOfWeek = function (date) {\n        return date.clone().endOf(\"week\");\n    };\n    MomentUtils.prototype.getNextMonth = function (date) {\n        return date.clone().add(1, \"month\");\n    };\n    MomentUtils.prototype.getPreviousMonth = function (date) {\n        return date.clone().subtract(1, \"month\");\n    };\n    MomentUtils.prototype.getMonthArray = function (date) {\n        var firstMonth = date.clone().startOf(\"year\");\n        var monthArray = [firstMonth];\n        while (monthArray.length < 12) {\n            var prevMonth = monthArray[monthArray.length - 1];\n            monthArray.push(this.getNextMonth(prevMonth));\n        }\n        return monthArray;\n    };\n    MomentUtils.prototype.getYear = function (date) {\n        return date.get(\"year\");\n    };\n    MomentUtils.prototype.setYear = function (date, year) {\n        return date.clone().set(\"year\", year);\n    };\n    MomentUtils.prototype.mergeDateAndTime = function (date, time) {\n        return date\n            .hour(time.hour())\n            .minute(time.minute())\n            .second(time.second());\n    };\n    MomentUtils.prototype.getWeekdays = function () {\n        return this.moment.weekdaysShort(true);\n    };\n    MomentUtils.prototype.isEqual = function (value, comparing) {\n        if (value === null && comparing === null) {\n            return true;\n        }\n        return this.moment(value).isSame(comparing);\n    };\n    MomentUtils.prototype.getWeekArray = function (date) {\n        var start = date\n            .clone()\n            .startOf(\"month\")\n            .startOf(\"week\");\n        var end = date\n            .clone()\n            .endOf(\"month\")\n            .endOf(\"week\");\n        var count = 0;\n        var current = start;\n        var nestedWeeks = [];\n        while (current.isBefore(end)) {\n            var weekNumber = Math.floor(count / 7);\n            nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n            nestedWeeks[weekNumber].push(current);\n            current = current.clone().add(1, \"day\");\n            count += 1;\n        }\n        return nestedWeeks;\n    };\n    MomentUtils.prototype.getYearRange = function (start, end) {\n        var startDate = this.moment(start).startOf(\"year\");\n        var endDate = this.moment(end).endOf(\"year\");\n        var years = [];\n        var current = startDate;\n        while (current.isBefore(endDate)) {\n            years.push(current);\n            current = current.clone().add(1, \"year\");\n        }\n        return years;\n    };\n    MomentUtils.prototype.isWithinRange = function (date, _a) {\n        var start = _a[0], end = _a[1];\n        return date.isBetween(start, end, null, \"[]\");\n    };\n    return MomentUtils;\n}());\n\nexport default MomentUtils;\n"]},"metadata":{},"sourceType":"module"}