{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.dayMatchesModifier = dayMatchesModifier;\nexports.getModifiersForDay = getModifiersForDay;\n\nvar _DateUtils = require('./DateUtils');\n\nvar _Helpers = require('./Helpers');\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\n\n\nfunction dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n\n  var arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(function (mod) {\n    if (!mod) {\n      return false;\n    }\n\n    if (mod instanceof Date) {\n      return (0, _DateUtils.isSameDay)(day, mod);\n    }\n\n    if ((0, _Helpers.isRangeOfDates)(mod)) {\n      return (0, _DateUtils.isDayInRange)(day, mod);\n    }\n\n    if (mod.after && mod.before && (0, _DateUtils.isDayAfter)(mod.before, mod.after)) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) && (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.after && mod.before && ((0, _DateUtils.isDayAfter)(mod.after, mod.before) || (0, _DateUtils.isSameDay)(mod.after, mod.before))) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after) || (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.after) {\n      return (0, _DateUtils.isDayAfter)(day, mod.after);\n    }\n\n    if (mod.before) {\n      return (0, _DateUtils.isDayBefore)(day, mod.before);\n    }\n\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(function (dayOfWeek) {\n        return day.getDay() === dayOfWeek;\n      });\n    }\n\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n\n    return false;\n  });\n}\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\n\n\nfunction getModifiersForDay(day) {\n  var modifiersObj = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Object.keys(modifiersObj).reduce(function (modifiers, modifierName) {\n    var value = modifiersObj[modifierName];\n\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n\n    return modifiers;\n  }, []);\n}\n\nexports.default = {\n  dayMatchesModifier: dayMatchesModifier,\n  getModifiersForDay: getModifiersForDay\n};","map":{"version":3,"sources":["../src/ModifiersUtils.js"],"names":["dayMatchesModifier","arr","Array","mod","day","getModifiersForDay","modifiersObj","value","modifiers"],"mappings":"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","sourcesContent":["import { isDayAfter, isDayBefore, isDayInRange, isSameDay } from './DateUtils';\nimport { isRangeOfDates } from './Helpers';\n\n/**\n * Return `true` if a date matches the specified modifier.\n *\n * @export\n * @param {Date} day\n * @param {Any} modifier\n * @return {Boolean}\n */\nexport function dayMatchesModifier(day, modifier) {\n  if (!modifier) {\n    return false;\n  }\n  const arr = Array.isArray(modifier) ? modifier : [modifier];\n  return arr.some(mod => {\n    if (!mod) {\n      return false;\n    }\n    if (mod instanceof Date) {\n      return isSameDay(day, mod);\n    }\n    if (isRangeOfDates(mod)) {\n      return isDayInRange(day, mod);\n    }\n    if (mod.after && mod.before && isDayAfter(mod.before, mod.after)) {\n      return isDayAfter(day, mod.after) && isDayBefore(day, mod.before);\n    }\n    if (\n      mod.after &&\n      mod.before &&\n      (isDayAfter(mod.after, mod.before) || isSameDay(mod.after, mod.before))\n    ) {\n      return isDayAfter(day, mod.after) || isDayBefore(day, mod.before);\n    }\n    if (mod.after) {\n      return isDayAfter(day, mod.after);\n    }\n    if (mod.before) {\n      return isDayBefore(day, mod.before);\n    }\n    if (mod.daysOfWeek) {\n      return mod.daysOfWeek.some(dayOfWeek => day.getDay() === dayOfWeek);\n    }\n    if (typeof mod === 'function') {\n      return mod(day);\n    }\n    return false;\n  });\n}\n\n/**\n * Return the modifiers matching the given day for the given\n * object of modifiers.\n *\n * @export\n * @param {Date} day\n * @param {Object} [modifiersObj={}]\n * @return {Array}\n */\nexport function getModifiersForDay(day, modifiersObj = {}) {\n  return Object.keys(modifiersObj).reduce((modifiers, modifierName) => {\n    const value = modifiersObj[modifierName];\n    if (dayMatchesModifier(day, value)) {\n      modifiers.push(modifierName);\n    }\n    return modifiers;\n  }, []);\n}\n\nexport default { dayMatchesModifier, getModifiersForDay };\n"]},"metadata":{},"sourceType":"script"}