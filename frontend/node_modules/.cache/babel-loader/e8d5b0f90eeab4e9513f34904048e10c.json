{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/AddTask.js\";\nimport React, { Component } from 'react';\nimport { TextField, Button, Paper } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n  // Required props: category list, refresh Task\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.setCategory = this.setCategory.bind(this);\n    console.log(this.props.date);\n    this.state = {\n      selectedDate: this.props.date && moment(this.props.date),\n      selectedCategory: null\n    };\n  }\n\n  async addTask(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate,\n        category: this.state.selectedCategory\n      };\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this._inputElement.value = null;\n      this.setState({\n        selectedDate: null,\n        selectedCategory: null\n      });\n      this.props.refreshTasks(newTask);\n    }\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  setCategory(category) {\n    this.setState({\n      selectedCategory: category\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      id: \"addTaskForm\",\n      className: this.props.className,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      className: \"card-1 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {\n          this.addTask(ev);\n        }\n      },\n      className: \"addNewTask\",\n      id: \"standard-basic\",\n      inputRef: a => this._inputElement = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      libInstance: moment,\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      clearable: true,\n      className: \"DatePicker\",\n      value: this.state.selectedDate,\n      onChange: date => this.updateDate(date),\n      label: \"Due Date\",\n      format: \"MM/DD/yyyy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(CategoryMenu, {\n      label: this.state.selectedCategory,\n      setCategory: this.setCategory,\n      categories: this.props.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default AddTask;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/AddTask.js"],"names":["React","Component","TextField","Button","Paper","MuiPickersUtilsProvider","KeyboardDatePicker","MomentUtils","moment","CategoryMenu","auth0Client","axios","AddTask","constructor","props","addTask","bind","updateDate","setCategory","console","log","date","state","selectedDate","selectedCategory","e","isAuthenticated","history","push","preventDefault","_inputElement","newTask","userId","getProfile","sub","content","value","dueDate","category","post","headers","getIdToken","setState","refreshTasks","render","className","ev","key","a","categories"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { TextField, Button, Paper } from '@material-ui/core';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport moment from 'moment';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\n\nclass AddTask extends Component {\n\n    // Required props: category list, refresh Task\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.setCategory = this.setCategory.bind(this);\n\n        console.log(this.props.date);\n\n        this.state = {\n            selectedDate: this.props.date && moment(this.props.date),\n            selectedCategory: null,\n        }\n    }\n\n    async addTask(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n                category: this.state.selectedCategory,\n            }\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this._inputElement.value = null;\n            this.setState({\n                selectedDate: null,\n                selectedCategory: null,\n            })\n            this.props.refreshTasks(newTask);\n\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    setCategory(category) {\n        this.setState({\n            selectedCategory: category,\n        })\n    }\n\n    render() {\n        return (\n            <Paper variant=\"outlined\" id=\"addTaskForm\" className={this.props.className}>\n                <form onSubmit={this.addTask} className=\"card-1 form-group\">\n                    <TextField onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            this.addTask(ev);\n                        }\n                    }} className=\"addNewTask\" id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                    <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                    <KeyboardDatePicker\n                        clearable\n                        className=\"DatePicker\"\n                        value={this.state.selectedDate}\n                        onChange={(date) => this.updateDate(date)}\n                        label=\"Due Date\"\n                        format=\"MM/DD/yyyy\"\n                    />\n                    </MuiPickersUtilsProvider>\n                    <Button variant=\"contained\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                    <CategoryMenu label={this.state.selectedCategory} setCategory={this.setCategory} categories={this.props.categories} />\n                </form>\n            </Paper>\n        )\n    }\n}\n\nexport default AddTask;"]},"metadata":{},"sourceType":"module"}