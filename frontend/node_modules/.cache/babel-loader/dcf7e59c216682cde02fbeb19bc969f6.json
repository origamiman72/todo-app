{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\nimport MiniTask from '../Tasks/MiniTask';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Paper, TextField, Button } from '@material-ui/core';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\n\nclass AddCalendarTask extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    this.getCategories();\n  }\n\n  async getCategories() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    console.log(\"categories\", categories);\n    this.setState({\n      categories: categories.data.categories\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fullScreen\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"addTask\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      onKeyPress: ev => {\n        if (ev.key === 'Enter') {// this.addTask(ev);\n        }\n      },\n      className: \"addNewTask\",\n      id: \"standard-basic\",\n      inputRef: a => this._inputElement = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }\n    }, \"Add\"), /*#__PURE__*/React.createElement(CategoryMenu, {\n      label: \"None\",\n      setCategory: () => {},\n      categories: this.state.categories,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n      return firstDay;\n    };\n\n    this.state = {\n      taskList: [],\n      dateObject: moment()\n    };\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      addingTask: false\n    });\n  }\n\n  render() {\n    var weekdayshort = moment.weekdaysShort();\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        className: \"empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      }, \"\"));\n    }\n\n    let relevantTasks = [];\n\n    for (let i = 0; i < this.state.taskList.length; i++) {\n      var curr = this.state.taskList[i];\n\n      if (curr.dueDate) {\n        if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n          relevantTasks.push(curr);\n        }\n      }\n    }\n\n    let daysInMonth = [];\n\n    for (let i = 0; i < this.state.dateObject.daysInMonth(); i++) {\n      var todayTasks = [];\n\n      for (let j = 0; j < relevantTasks.length; j++) {\n        var currTask = relevantTasks[j];\n\n        if (moment(currTask.dueDate).date() == i + 1) {\n          todayTasks.push(currTask);\n        }\n      }\n\n      let currentDay = i + 1 == moment().date() ? \"today\" : \"\";\n      daysInMonth[i] = /*#__PURE__*/React.createElement(\"td\", {\n        key: i + 1\n        /*className={`calendar-day ${currentDay}`} */\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: `calendar-day ${currentDay}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-between day-header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }\n      }, i + 1), /*#__PURE__*/React.createElement(IconButton, {\n        size: \"small\",\n        className: \"hover-only\",\n        onClick: () => {\n          this.setState({\n            addingTask: true\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(AddIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 29\n        }\n      }))), /*#__PURE__*/React.createElement(\"ul\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }\n      }, todayTasks.map(task => /*#__PURE__*/React.createElement(\"li\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(MiniTask, {\n        content: task.content,\n        key: task._id,\n        id: task._id,\n        complete: task.completed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }\n      }))))));\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let weekdayshortname = weekdayshort.map(day => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: day,\n        className: \"weekday-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 20\n        }\n      }, d);\n    });\n    return (\n      /*#__PURE__*/\n      // <div>Calendar</div>\n      React.createElement(\"div\", {\n        className: \"container d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }\n      }, this.state.addingTask && /*#__PURE__*/React.createElement(AddCalendarTask, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 43\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar-month\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, this.state.dateObject.format(\"MMMM\")), /*#__PURE__*/React.createElement(\"table\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 29\n        }\n      }, weekdayshortname)), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 25\n        }\n      }, daysinmonth))))\n    );\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js"],"names":["React","Component","moment","auth0Client","axios","Task","MiniTask","AddIcon","IconButton","Paper","TextField","Button","CategoryMenu","AddCalendarTask","constructor","props","state","componentDidMount","getCategories","isAuthenticated","history","push","categories","post","userId","getProfile","sub","headers","getIdToken","console","log","setState","data","render","ev","key","a","_inputElement","addTask","Calendar","firstDayOfMonth","dateObject","firstDay","startOf","format","taskList","tasks","todoTasks","addingTask","weekdayshort","weekdaysShort","blanks","i","relevantTasks","length","curr","dueDate","month","daysInMonth","todayTasks","j","currTask","date","currentDay","map","task","content","_id","completed","totalSlots","rows","cells","forEach","row","weekdayshortname","day","daysinmonth","d"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\nimport MiniTask from '../Tasks/MiniTask';\nimport AddIcon from '@material-ui/icons/Add';\nimport IconButton from '@material-ui/core/IconButton';\nimport { Paper, TextField, Button } from '@material-ui/core';\nimport CategoryMenu from '../components/categoryMenu/categoryMenu';\n\nclass AddCalendarTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    async componentDidMount() {\n        this.getCategories();\n    }\n\n    async getCategories() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const categories = await axios.post(`http://localhost:8081/app/getCategories`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        console.log(\"categories\", categories);\n\n        this.setState({\n            categories: categories.data.categories,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"fullScreen\">\n                <Paper className = \"addTask\">\n                    <TextField onKeyPress={(ev) => {\n                        if (ev.key === 'Enter') {\n                            // this.addTask(ev);\n                        }\n                    }} className=\"addNewTask\" id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                <Button variant=\"contained\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                <CategoryMenu label={\"None\"} setCategory={() => {}} categories={this.state.categories} />\n                </Paper>\n            </div>\n        )\n    }\n\n}\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [],\n            dateObject: moment(),\n        }\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            addingTask: false,\n        })\n    }\n\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject).startOf(\"month\").format(\"d\");\n        return firstDay;\n    }\n\n    render() {\n        var weekdayshort = moment.weekdaysShort();\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(\n            <td className=\"empty\">{\"\"}</td>\n            )\n        }\n\n        let relevantTasks = [];\n        for (let i = 0; i < this.state.taskList.length; i++) {\n            var curr = this.state.taskList[i];\n            if (curr.dueDate) {\n                if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n                    relevantTasks.push(curr);\n                }\n            }\n        }\n\n        let daysInMonth = [];\n        for (let i = 0; i < this.state.dateObject.daysInMonth(); i++) {\n            var todayTasks = [];\n            for (let j = 0; j < relevantTasks.length; j++) {\n                var currTask = relevantTasks[j];\n                if (moment(currTask.dueDate).date() == i + 1) {\n                    todayTasks.push(currTask);\n                }\n\n            }\n            let currentDay = i + 1 == moment().date() ? \"today\" : \"\";   \n            daysInMonth[i] =\n                <td key={i + 1} /*className={`calendar-day ${currentDay}`} */>\n                <div className={`calendar-day ${currentDay}`}>\n                    <div className=\"d-flex justify-content-between day-header\">\n                        <div>{i + 1}</div>\n                        <IconButton size=\"small\" className=\"hover-only\" onClick={() => {\n                            this.setState({addingTask: true,})\n                        }}>\n                            <AddIcon />\n                        </IconButton>\n                    </div>\n                    <ul>\n                        {todayTasks.map((task) =>\n                        <li><MiniTask content={task.content} key={task._id} id={task._id} complete={task.completed} /></li>)}\n                    </ul>\n                </div>\n            </td>\n        }\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                rows.push(cells);\n            }\n        });\n\n        let weekdayshortname = weekdayshort.map(day => {\n            return (\n                <th key={day} className=\"weekday-label\">\n                    {day}\n                </th>\n            )\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>\n        })\n\n        return (\n            // <div>Calendar</div>\n            <div className=\"container d-flex justify-content-center\">\n                {this.state.addingTask && <AddCalendarTask />}\n                <div className=\"calendar\">\n                    <div className=\"calendar-month\">{this.state.dateObject.format(\"MMMM\")}</div>\n                    <table className=\"\">\n                        <thead>\n                            <tr>{weekdayshortname}</tr>\n                        </thead>\n                        <tbody>{daysinmonth}</tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}