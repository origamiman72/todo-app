{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.state = {\n      taskList: []\n    };\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const questions = (await axios.get('http://localhost:8081/app')).data;\n    console.log(questions);\n    console.log(questions.todoTasks);\n    this.setState({\n      taskList: questions.todoTasks\n    });\n  }\n\n  async addTask(e) {\n    e.preventDefault();\n    console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value\n      };\n      console.log(newTask);\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.setState(prevState => {\n        return {\n          taskList: prevState.taskList.concat(newTask)\n        };\n      });\n    }\n\n    console.log(this.state.taskList);\n  }\n\n  render() {\n    console.log(this.state.taskList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Add new Task\",\n      ref: a => this._inputElement = a,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Add\"))), this.state.taskList.map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task.date,\n      date: task.date,\n      dueDate: task.dueDate,\n      content: task.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 59\n      }\n    }))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","TaskList","constructor","props","addTask","bind","state","taskList","componentDidMount","isAuthenticated","history","push","questions","get","data","console","log","todoTasks","setState","e","preventDefault","getProfile","_inputElement","newTask","userId","sub","content","value","post","headers","getIdToken","prevState","concat","render","a","map","task","date","dueDate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n\n        this.state = {\n            taskList: [],\n        }\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const questions = (await axios.get('http://localhost:8081/app')).data;\n        console.log(questions);\n        console.log(questions.todoTasks);\n\n        this.setState({\n            taskList: questions.todoTasks,\n        })\n    }\n\n    async addTask(e) {\n\n        e.preventDefault();\n        console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n            }\n            console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.setState((prevState) => {\n                return {\n                    taskList: prevState.taskList.concat(newTask),\n                };\n            })\n        }\n\n        console.log(this.state.taskList);\n    }\n\n    render() {\n        console.log(this.state.taskList);\n        return (\n            <div className=\"container\">\n                <div className=\"TaskList\">\n                    <div>\n                        <form onSubmit={this.addTask}>\n                            <input placeholder=\"Add new Task\" ref={(a) => this._inputElement = a}\n                                type=\"text\"></input>\n                            <button type=\"submit\">Add</button>\n                        </form>\n                    </div>\n                    {\n                        this.state.taskList.map((task) => <Task key={task.date} date={task.date} dueDate={task.dueDate} content={task.content} />)\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}