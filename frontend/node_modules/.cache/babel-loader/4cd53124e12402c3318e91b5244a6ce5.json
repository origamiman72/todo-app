{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\n\nclass Calendar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.firstDayOfMonth = () => {\n      let dateObject = this.state.dateObject;\n      let firstDay = moment(dateObject).startOf(\"moment\").format(\"d\");\n      return firstDay;\n    };\n\n    this.state = {\n      taskList: [],\n      dateObject: moment()\n    };\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.setState({\n      taskList: tasks.data.todoTasks\n    });\n  }\n\n  render() {\n    var weekdayshort = moment.weekdaysShort();\n    let blanks = [];\n\n    for (let i = 0; i < this.firstDayOfMonth(); i++) {\n      blanks.push( /*#__PURE__*/React.createElement(\"td\", {\n        className: \"calendar-day empty\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"\"));\n    }\n\n    let daysInMonth = [];\n\n    for (let d = 0; d < this.state.dateObject.daysInMonth(); d++) {\n      daysInMonth.push( /*#__PURE__*/React.createElement(\"td\", {\n        key: d,\n        className: \"calendar-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, d));\n    }\n\n    for (let i = 0; i < this.state.taskList.length; i++) {\n      var curr = this.state.taskList[i];\n\n      if (curr.dueDate) {\n        if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n          for (let i = 0; i < daysInMonth.length; i++) {\n            console.log(daysInMonth[i].key, moment(curr.dueDate).day());\n\n            if (moment(curr.dueDate).day() == daysInMonth[i].key) {\n              /*#__PURE__*/\n              React.createElement(\"td\", {\n                key: daysInMonth[i].key,\n                className: \"calendar-day\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 29\n                }\n              }, daysInMonth[i].key, /*#__PURE__*/React.createElement(\"ul\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }\n              }, /*#__PURE__*/React.createElement(Task, {\n                displayMenu: true,\n                displayDate: true,\n                key: curr.date,\n                edit: this,\n                complete: this,\n                remove: this,\n                categories: [],\n                task: curr,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 37\n                }\n              })));\n            }\n          }\n        }\n      }\n    }\n\n    var totalSlots = [...blanks, ...daysInMonth];\n    let rows = [];\n    let cells = [];\n    totalSlots.forEach((row, i) => {\n      if (i % 7 !== 0) {\n        cells.push(row);\n      } else {\n        rows.push(cells);\n        cells = [];\n        cells.push(row);\n      }\n\n      if (i === totalSlots.length - 1) {\n        rows.push(cells);\n      }\n    });\n    let weekdayshortname = weekdayshort.map(day => {\n      return /*#__PURE__*/React.createElement(\"th\", {\n        key: day,\n        className: \"weekday-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }\n      }, day);\n    });\n    let daysinmonth = rows.map((d, i) => {\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 20\n        }\n      }, d);\n    });\n    return (\n      /*#__PURE__*/\n      // <div>Calendar</div>\n      React.createElement(\"div\", {\n        className: \"container d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"calendar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"table\", {\n        className: \"calendar-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }\n      }, weekdayshortname)), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }\n      }, daysinmonth))))\n    );\n  }\n\n}\n\nexport default Calendar;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Calendar/Calendar.js"],"names":["React","Component","moment","auth0Client","axios","Task","Calendar","constructor","props","firstDayOfMonth","dateObject","state","firstDay","startOf","format","taskList","componentDidMount","isAuthenticated","history","push","tasks","post","userId","getProfile","sub","headers","getIdToken","setState","data","todoTasks","render","weekdayshort","weekdaysShort","blanks","i","daysInMonth","d","length","curr","dueDate","month","console","log","key","day","date","totalSlots","rows","cells","forEach","row","weekdayshortname","map","daysinmonth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport moment from 'moment';\nimport './calendar.scss';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport Task from '../Tasks/Task';\n\nclass Calendar extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            taskList: [],\n            dateObject: moment(),\n        }\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n        })\n    }\n\n    firstDayOfMonth = () => {\n        let dateObject = this.state.dateObject;\n        let firstDay = moment(dateObject).startOf(\"moment\").format(\"d\");\n        return firstDay;\n    }\n\n    render() {\n        var weekdayshort = moment.weekdaysShort();\n        let blanks = [];\n        for (let i = 0; i < this.firstDayOfMonth(); i++) {\n            blanks.push(\n            <td className=\"calendar-day empty\">{\"\"}</td>\n            )\n        }\n        let daysInMonth = [];\n        for (let d = 0; d < this.state.dateObject.daysInMonth(); d++) {\n            daysInMonth.push(\n                <td key={d} className=\"calendar-day\">\n                    {d}\n                </td>\n            );\n        }\n\n        for (let i = 0; i < this.state.taskList.length; i++) {\n            var curr = this.state.taskList[i];\n            if (curr.dueDate) {\n                if (moment(curr.dueDate).month() === this.state.dateObject.month()) {\n                    for (let i = 0; i < daysInMonth.length; i++) {\n                        console.log(daysInMonth[i].key, moment(curr.dueDate).day())\n                        if (moment(curr.dueDate).day() == daysInMonth[i].key) {\n                            <td key={daysInMonth[i].key} className=\"calendar-day\">\n                                {daysInMonth[i].key}\n                                <ul>\n                                    <Task \n                                        displayMenu\n                                        displayDate\n                                        key={curr.date} \n                                        edit={this}\n                                        complete={this} \n                                        remove={this} \n                                        categories={[]}\n                                        task={curr} />\n                                </ul>\n                            </td>\n                        }\n                    }\n                }\n            }\n        }\n\n        var totalSlots = [...blanks, ...daysInMonth];\n        let rows = [];\n        let cells = [];\n        totalSlots.forEach((row, i) => {\n            if (i % 7 !== 0) {\n                cells.push(row);\n            } else {\n                rows.push(cells);\n                cells = [];\n                cells.push(row);\n            }\n            if (i === totalSlots.length - 1) {\n                rows.push(cells);\n            }\n        });\n\n        let weekdayshortname = weekdayshort.map(day => {\n            return (\n                <th key={day} className=\"weekday-label\">\n                    {day}\n                </th>\n            )\n        });\n\n        let daysinmonth = rows.map((d, i) => {\n            return <tr>{d}</tr>\n        })\n\n        return (\n            // <div>Calendar</div>\n            <div className=\"container d-flex justify-content-center\">\n                <div className=\"calendar\">\n                    <table className=\"calendar-day\">\n                        <thead>\n                            <tr>{weekdayshortname}</tr>\n                        </thead>\n                        <tbody>{daysinmonth}</tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Calendar;"]},"metadata":{},"sourceType":"module"}