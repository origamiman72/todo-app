{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"; // import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\n\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline'; // import DayPickerInput from 'react-day-picker/DayPickerInput'\n// import 'react-day-picker/lib/style.css';\n// import \"react-datepicker/dist/react-datepicker.css\";\n\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.editTask = this.editTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.getCategories = this.getCategories.bind(this);\n    this.addCategory = this.addCategory.bind(this);\n    this.state = {\n      taskList: [],\n      uncompletedTasks: [],\n      completedTasks: [],\n      selectedDate: null,\n      categories: []\n    };\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  async getCategories() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const categories = await axios.post(`http://localhost:8081/getCategories`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.setState({\n      categories: categories.data.category\n    });\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    } // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    }); // tasks = tasks.data;\n    // console.log(tasks.data);\n    // console.log(questions);\n    // console.log(questions.todoTasks);\n\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Refreshes tasks shown on this page.\n\n\n  async refreshTasks() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var completedTasks = [];\n    var uncompletedTasks = [];\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completedTasks.push(tasks.data.todoTasks[i]);\n      } else {\n        uncompletedTasks.push(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompletedTasks: uncompletedTasks,\n      completedTasks: completedTasks\n    });\n  } // Deletes a task.\n\n\n  async deleteTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Edits a task.\n\n\n  async editTask(key, newContent) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/editTask', {\n      key: key,\n      newContent: newContent\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  } // Marks a task as completed.\n\n\n  async completeTask(key) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  }\n\n  async addTask(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate,\n        category: this._inputcategory && this._inputcategory.value\n      }; // console.log(newTask);\n\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.refreshTasks();\n      this._inputElement.value = null;\n      this.setState({\n        selectedDate: null\n      });\n    }\n  }\n\n  async addCategory(e) {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    e.preventDefault();\n\n    if (this._inputElement !== \"\") {\n      await axios.post('http://localhost:8081/app/addCategory', {\n        userId: auth0Client.getProfile().sub,\n        newCategory: this._inputcategory.value\n      }, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this._inputcategory.value = null;\n      this.getCategories();\n    }\n  }\n\n  render() {\n    if (this.state.uncompletedTasks.length === 0) {\n      var uncompletedTasksRender = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 42\n        }\n      }, \"You've completed all of your tasks!\");\n    } else {\n      var uncompletedTasksRender = this.state.uncompletedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n        displayMenu: true,\n        displayDate: true,\n        key: task.date,\n        edit: this.editTask,\n        complete: this.completeTask,\n        remove: this.deleteTask,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 43\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"main-Cont\",\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      className: \"sidebar\",\n      variant: \"outlined\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addCategory,\n      className: \"card-1 horiz form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"textField\",\n      inputRef: a => this._inputcategory = a,\n      label: \"Add new Category\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addCategory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, \"Add\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 25\n      }\n    }, this.state.categories))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Paper, {\n      variant: \"outlined\",\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      id: \"addTaskForm\",\n      className: \"card-1 form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      className: \"addNewTask\",\n      required: true,\n      id: \"standard-basic\",\n      inputRef: a => this._inputElement = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MuiPickersUtilsProvider, {\n      libInstance: moment,\n      utils: MomentUtils,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(KeyboardDatePicker, {\n      className: \"DatePicker\",\n      value: this.state.selectedDate,\n      onChange: date => this.updateDate(date) // inputStyle={{ textAlign: 'center' }}\n      // emptyLabel=\"Due Date\"\n      // placeholder=\"Due Date\"\n      ,\n      label: \"Due Date\",\n      format: \"MM/DD/yyyy\" // {/* // helperText=\"Clear Initial State\" */}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      className: \"textField\",\n      required: true,\n      inputRef: a => this._inputcategory = a,\n      label: \"Add new Task\",\n      variant: \"standard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      className: \"submitButton\",\n      color: \"primary\",\n      onClick: this.addTask,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, \"Add\"))), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, uncompletedTasksRender)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 21\n      }\n    }, this.state.completedTasks.length != 0 && \"Completed\"), /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 25\n      }\n    }, this.state.completedTasks.map(task => /*#__PURE__*/React.createElement(Task, {\n      displayMenu: true,\n      displayDate: true,\n      key: task.date,\n      complete: this.completeTask,\n      remove: this.deleteTask,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 43\n      }\n    })))))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","FlipMove","KeyboardDatePicker","MuiPickersUtilsProvider","TextField","moment","MomentUtils","Paper","Button","TaskList","constructor","props","addTask","bind","editTask","deleteTask","completeTask","updateDate","getCategories","addCategory","state","taskList","uncompletedTasks","completedTasks","selectedDate","categories","date","setState","isAuthenticated","history","push","post","userId","getProfile","sub","headers","getIdToken","data","category","componentDidMount","tasks","i","todoTasks","length","completed","refreshTasks","key","attempt","newContent","e","preventDefault","_inputElement","newTask","content","value","dueDate","_inputcategory","newCategory","render","uncompletedTasksRender","map","task","a"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"\n// import DatePicker from 'react-datepicker';\n// import DayPicker from 'react-day-picker';\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport TextField from '@material-ui/core/TextField';\n\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport Paper from '@material-ui/core/Paper';\nimport 'remove-focus-outline';\n\n// import DayPickerInput from 'react-day-picker/DayPickerInput'\n\n// import 'react-day-picker/lib/style.css';\n\n// import \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\nimport Button from '@material-ui/core/Button';\n\nclass TaskList extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.editTask = this.editTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.completeTask = this.completeTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n        this.getCategories = this.getCategories.bind(this);\n        this.addCategory = this.addCategory.bind(this);\n\n        this.state = {\n            taskList: [],\n            uncompletedTasks: [],\n            completedTasks: [],\n            selectedDate: null,\n            categories: [],\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    async getCategories() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const categories = await axios.post(`http://localhost:8081/getCategories`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        this.setState({\n            categories: categories.data.category,\n        })\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        // tasks = tasks.data;\n        // console.log(tasks.data);\n        // console.log(questions);\n        // console.log(questions.todoTasks);\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Refreshes tasks shown on this page.\n    async refreshTasks() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var completedTasks = [];\n        var uncompletedTasks = [];\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completedTasks.push(tasks.data.todoTasks[i]);\n            } else {\n                uncompletedTasks.push(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompletedTasks: uncompletedTasks,\n            completedTasks: completedTasks,\n        })\n    }\n\n    // Deletes a task.\n    async deleteTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Edits a task.\n    async editTask(key, newContent) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/editTask', {\n            key: key,\n            newContent: newContent,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    // Marks a task as completed.\n    async completeTask(key) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    async addTask(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n                category: this._inputcategory && this._inputcategory.value,\n            }\n            // console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.refreshTasks();\n\n            this._inputElement.value = null;\n            this.setState({\n                selectedDate: null,\n            })\n        }\n    }\n\n    async addCategory(e) {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n        e.preventDefault();\n        if (this._inputElement !== \"\") {\n            await axios.post('http://localhost:8081/app/addCategory',\n            {\n                userId: auth0Client.getProfile().sub,\n                newCategory: this._inputcategory.value,\n            },\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this._inputcategory.value = null;\n            this.getCategories();\n        }\n\n    }\n\n    render() {\n        if (this.state.uncompletedTasks.length === 0) {\n            var uncompletedTasksRender = <div>You've completed all of your tasks!</div>\n        } else {\n            var uncompletedTasksRender = (\n                            this.state.uncompletedTasks.map(\n                                (task) => <Task \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            edit={this.editTask}\n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            task={task} />\n                                            )\n            )\n        }\n\n        return (\n            <div id=\"main-Cont\" className=\"container\">\n                <div>\n                    <Paper className=\"sidebar\" variant=\"outlined\">\n                        <form onSubmit={this.addCategory} className=\"card-1 horiz form-group\">\n                            <TextField className=\"textField\" inputRef={(a) => this._inputcategory = a} label=\"Add new Category\" variant=\"standard\" />\n                            <Button variant=\"outlined\" className=\"submitButton\" color=\"primary\" onClick={this.addCategory}>Add</Button>\n                        </form>\n                        <div>\n                            {this.state.categories}\n                        </div>\n                    </Paper>\n                </div>\n                <div className=\"main\">\n                <Paper variant=\"outlined\" className=\"TaskList\">\n                    <div>\n                        <form onSubmit={this.addTask} id=\"addTaskForm\" className=\"card-1 form-group\">\n                            {/* <input className=\"addTaskField\" placeholder=\"Add new Task\" ref={(a) => this._inputElement = a}\n                                type=\"text\"></input> */}\n                            <TextField className=\"addNewTask\" required id=\"standard-basic\" inputRef={(a) => this._inputElement = a} label=\"Add new Task\" variant=\"standard\" />\n                            {/* <DatePicker className=\"DatePicker\" showTimeSelect placeholderText=\"Due Date\" selected={this.state.selectedDate} onChange={(date) => {this.updateDate(date)}} /> */}\n                            {/* <DayPickerInput /> */}\n                            <MuiPickersUtilsProvider libInstance={moment} utils={MomentUtils}>\n\n                            <KeyboardDatePicker\n                                className=\"DatePicker\"\n                                value={this.state.selectedDate}\n                                onChange={(date) => this.updateDate(date)}\n                                // inputStyle={{ textAlign: 'center' }}\n                                // emptyLabel=\"Due Date\"\n                                // placeholder=\"Due Date\"\n                                label=\"Due Date\"\n                                format=\"MM/DD/yyyy\"\n\n                                // {/* // helperText=\"Clear Initial State\" */}\n                            />\n                            </MuiPickersUtilsProvider>\n                            <TextField className=\"textField\" required inputRef={(a) => this._inputcategory = a} label=\"Add new Task\" variant=\"standard\" />\n                            {/* <button onClick={this.addTask} className=\"no-focus-outline\" id=\"addTaskButton\">Add</button> */}\n                            <Button variant=\"outlined\" className=\"submitButton\" color=\"primary\" onClick={this.addTask}>Add</Button>\n                        </form>\n                    </div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {uncompletedTasksRender}\n                        </FlipMove>\n                    </ul>\n                    <div>{(this.state.completedTasks.length != 0) && \"Completed\"}</div>\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {\n                            this.state.completedTasks.map(\n                                (task) => <Task  \n                                            displayMenu\n                                            displayDate\n                                            key={task.date} \n                                            complete={this.completeTask} \n                                            remove={this.deleteTask} \n                                            task={task} />\n                                            )\n                        }\n                        </FlipMove>\n\n                    </ul>\n                </Paper>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}