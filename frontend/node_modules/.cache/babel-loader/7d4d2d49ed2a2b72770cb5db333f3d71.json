{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Week/Week.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport Task from '../Tasks/Task';\n\nclass Week extends Component {\n  constructor(props) {\n    super(props);\n    this.filterTasks = this.filterTasks.bind(this);\n    this.state = {\n      sunday: [],\n      monday: [],\n      tuesday: [],\n      wednesday: [],\n      thursday: [],\n      friday: [],\n      saturday: []\n    };\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    }\n\n    const tasks = await axios.post(`http://localhost:8081/app`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    var taskList = tasks.data.todoTasks;\n    this.filterTasks(taskList);\n  }\n\n  filterTasks(taskList) {\n    var sunday = [];\n    var monday = [];\n    var tuesday = [];\n    var wednesday = [];\n    var thursday = [];\n    var wednesday = [];\n    var thursday = [];\n    var friday = [];\n    var saturday = [];\n    console.log(taskList);\n\n    for (var i = 0; i < taskList.length; i++) {\n      var curr = taskList[i];\n\n      if (curr.dueDate !== null) {\n        var now = moment();\n        var input = moment(curr.dueDate);\n        var isThisWeek = now.isoWeek() == input.isoWeek();\n        console.log(isThisWeek);\n        console.log(\"nut\");\n\n        if (isThisWeek) {\n          switch (input.day()) {\n            case 0:\n              sunday.push(curr);\n              break;\n\n            case 1:\n              monday.push(curr);\n              break;\n\n            case 2:\n              tuesday.push(curr);\n              break;\n\n            case 3:\n              wednesday.push(curr);\n              break;\n\n            case 4:\n              thursday.push(curr);\n              break;\n\n            case 5:\n              friday.push(curr);\n              break;\n\n            case 6:\n              saturday.push(curr);\n              break;\n          }\n        }\n\n        this.setState({\n          sunday: sunday,\n          monday: monday,\n          tuesday: tuesday,\n          wednesday: wednesday,\n          thursday: thursday,\n          friday: friday,\n          saturday: saturday\n        });\n        console.log(this.state);\n      }\n    }\n  }\n\n  render() {\n    console.log(\"big nut\");\n    var week = [this.state.saturday, this.state.monday, this.state.tuesday, this.state.wednesday, this.state.thursday, this.state.friday, this.state.sunday];\n    console.log(week);\n    var mappedWeek = [];\n\n    for (var i = 0; i < week.length; i++) {\n      mappedWeek.push(week[i].map(task => /*#__PURE__*/React.createElement(Task, {\n        key: task.date,\n        date: task.date,\n        edit: this.editTask,\n        complete: this.completeTask,\n        remove: this.deleteTask,\n        id: task._id,\n        task: task,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 31\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, this.state.monday.map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task.date,\n      date: task.date,\n      edit: this.editTask,\n      complete: this.completeTask,\n      remove: this.deleteTask,\n      id: task._id,\n      task: task,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 31\n      }\n    }) // dueDate={task.dueDate} \n    // content={task.content} />\n    ), mappedWeek[0], mappedWeek[1], mappedWeek[2], mappedWeek[3]);\n  }\n\n}\n\nexport default Week;","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Week/Week.js"],"names":["React","Component","auth0Client","axios","withRouter","moment","Task","Week","constructor","props","filterTasks","bind","state","sunday","monday","tuesday","wednesday","thursday","friday","saturday","componentDidMount","isAuthenticated","history","push","tasks","post","userId","getProfile","sub","headers","getIdToken","taskList","data","todoTasks","console","log","i","length","curr","dueDate","now","input","isThisWeek","isoWeek","day","setState","render","week","mappedWeek","map","task","date","editTask","completeTask","deleteTask","_id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport moment from 'moment';\nimport Task from '../Tasks/Task';\n\nclass Week extends Component {\n    constructor(props) {\n        super(props);\n\n        this.filterTasks = this.filterTasks.bind(this);\n\n        this.state = {\n            sunday: [],\n            monday: [],\n            tuesday: [],\n            wednesday: [],\n            thursday: [],\n            friday: [],\n            saturday: [],\n        }\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        const tasks = await axios.post(`http://localhost:8081/app`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n\n        var taskList = tasks.data.todoTasks;\n        this.filterTasks(taskList);\n    }\n\n    filterTasks(taskList) {\n\n        var sunday = [];\n        var monday = [];\n        var tuesday = [];\n        var wednesday = [];\n        var thursday = [];\n        var wednesday = [];\n        var thursday = [];\n        var friday = [];\n        var saturday = [];\n        console.log(taskList);\n\n        for (var i = 0; i < taskList.length; i++) {\n            var curr = taskList[i];\n            if (curr.dueDate !== null) {\n                var now = moment();\n                var input = moment(curr.dueDate);\n                var isThisWeek = (now.isoWeek() == input.isoWeek());\n                console.log(isThisWeek);\n                console.log(\"nut\");\n\n                if (isThisWeek) {\n                    switch(input.day()) {\n                        case 0:\n                            sunday.push(curr);\n                            break;\n                        case 1:\n                            monday.push(curr);\n                            break;\n                        case 2:\n                            tuesday.push(curr);\n                            break;\n                        case 3:\n                            wednesday.push(curr);\n                            break;\n                        case 4:\n                            thursday.push(curr);\n                            break;\n                        case 5:\n                            friday.push(curr);\n                            break;\n                        case 6:\n                            saturday.push(curr);\n                            break;\n                    }\n                }\n\n                this.setState({\n                    sunday: sunday,\n                    monday: monday,\n                    tuesday: tuesday,\n                    wednesday: wednesday,\n                    thursday: thursday,\n                    friday: friday,\n                    saturday: saturday,\n                })\n\n                console.log(this.state);\n            }\n        }\n    }\n\n    render () {\n        console.log(\"big nut\");\n        var week = [this.state.saturday,\n                    this.state.monday,\n                    this.state.tuesday,\n                    this.state.wednesday,\n                    this.state.thursday,\n                    this.state.friday,\n                    this.state.sunday]\n        console.log(week);\n        var mappedWeek = [];\n        for (var i = 0; i < week.length; i++) {\n            mappedWeek.push(week[i].map(\n                    (task) => <Task \n                                key={task.date} \n                                date={task.date} \n                                edit={this.editTask}\n                                complete={this.completeTask} \n                                remove={this.deleteTask} \n                                id={task._id} \n                                task={task} />\n\n            ))\n        }\n        return (\n            <div>\n                { this.state.monday.map(\n                    (task) => <Task\n                                key={task.date} \n                                date={task.date} \n                                edit={this.editTask}\n                                complete={this.completeTask} \n                                remove={this.deleteTask} \n                                id={task._id} \n                                task={task} />\n                                // dueDate={task.dueDate} \n                                // content={task.content} />\n                                )\n                }\n                {mappedWeek[0]}\n                {mappedWeek[1]}\n                {mappedWeek[2]}\n                {mappedWeek[3]}\n            </div>\n        )\n    }\n\n}\n\nexport default Week;"]},"metadata":{},"sourceType":"module"}