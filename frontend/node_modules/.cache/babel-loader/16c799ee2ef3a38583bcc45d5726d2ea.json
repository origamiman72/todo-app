{"ast":null,"code":"var _jsxFileName = \"/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js\";\nimport React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\";\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\n\nclass TaskList extends Component {\n  constructor(props) {\n    super(props);\n    this.addTask = this.addTask.bind(this);\n    this.deleteTask = this.deleteTask.bind(this);\n    this.completeTask = this.completeTask.bind(this);\n    this.updateDate = this.updateDate.bind(this);\n    this.state = {\n      taskList: [],\n      uncompleted: [],\n      completed: [],\n      selectedDate: null\n    };\n  }\n\n  updateDate(date) {\n    this.setState({\n      selectedDate: date\n    });\n  }\n\n  async componentDidMount() {\n    if (!auth0Client.isAuthenticated()) {\n      this.props.history.push('/');\n      return;\n    } // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n\n\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    }); // tasks = tasks.data;\n    // console.log(tasks.data);\n    // console.log(questions);\n    // console.log(questions.todoTasks);\n\n    var completed = this.state.completed.slice();\n    var uncompleted = this.state.completed.slice();\n\n    for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n      if (tasks.data.todoTasks[i].completed) {\n        completed.concat(tasks.data.todoTasks[i]);\n      } else {\n        uncompleted.concat(tasks.data.todoTasks[i]);\n      }\n    }\n\n    this.setState({\n      taskList: tasks.data.todoTasks,\n      uncompleted: uncompleted,\n      completed: completed\n    });\n    console.log(this.state.completed);\n    console.log(this.state.uncompleted);\n  }\n\n  async refreshTasks() {\n    const tasks = await axios.post(`http://localhost:8081/app/`, {\n      userId: auth0Client.getProfile().sub\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.setState({\n      taskList: tasks.data.todoTasks\n    });\n  }\n\n  async deleteTask(key) {\n    const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  }\n\n  async completeTask(key) {\n    const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n      key: key\n    }, {\n      headers: {\n        'Authorization': `Bearer ${auth0Client.getIdToken()}`\n      }\n    });\n    this.refreshTasks();\n  }\n\n  async addTask(e) {\n    e.preventDefault(); // console.log(auth0Client.getProfile());\n\n    if (this._inputElement !== \"\") {\n      var newTask = {\n        userId: auth0Client.getProfile().sub,\n        content: this._inputElement.value,\n        dueDate: this.state.selectedDate\n      }; // console.log(newTask);\n\n      await axios.post('http://localhost:8081/app/newTask', newTask, {\n        headers: {\n          'Authorization': `Bearer ${auth0Client.getIdToken()}`\n        }\n      });\n      this.refreshTasks();\n      this._inputElement.value = \"\"; // this.setState((prevState) => {\n      //     return {\n      //         taskList: prevState.taskList.concat(newTask),\n      //     };\n      // })\n    }\n  }\n\n  render() {\n    // console.log(this.state.taskList);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TaskList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FlipMove, {\n      duration: 250,\n      easing: \"ease\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, this.state.taskList.map(task => /*#__PURE__*/React.createElement(Task, {\n      key: task.date,\n      date: task.date,\n      remove: this.completeTask,\n      id: task._id,\n      dueDate: task.dueDate,\n      content: task.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 43\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.addTask,\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"\",\n      placeholder: \"Add new Task\",\n      ref: a => this._inputElement = a,\n      type: \"text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      placeholderText: \"Due Date\",\n      selected: this.state.selectedDate,\n      onChange: date => {\n        this.updateDate(date);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 29\n      }\n    }, \"Add\")))));\n  }\n\n}\n\nexport default withRouter(TaskList);","map":{"version":3,"sources":["/Users/abhikahuja/Documents/Projects/todo-app/frontend/src/Tasks/TaskList.js"],"names":["React","Component","auth0Client","Task","axios","withRouter","FlipMove","DatePicker","TaskList","constructor","props","addTask","bind","deleteTask","completeTask","updateDate","state","taskList","uncompleted","completed","selectedDate","date","setState","componentDidMount","isAuthenticated","history","push","tasks","post","userId","getProfile","sub","headers","getIdToken","slice","i","data","todoTasks","length","concat","console","log","refreshTasks","key","attempt","e","preventDefault","_inputElement","newTask","content","value","dueDate","render","map","task","_id","a"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;AACA,OAAO,iBAAP;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC7BQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,UAAL,GAAkB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKI,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,EADD;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,SAAS,EAAE,EAHF;AAITC,MAAAA,YAAY,EAAE;AAJL,KAAb;AAMH;;AAEDL,EAAAA,UAAU,CAACM,IAAD,EAAO;AACb,SAAKC,QAAL,CAAc;AACVF,MAAAA,YAAY,EAAEC;AADJ,KAAd;AAGH;;AAED,QAAME,iBAAN,GAA0B;AACtB,QAAI,CAACrB,WAAW,CAACsB,eAAZ,EAAL,EAAoC;AAChC,WAAKd,KAAL,CAAWe,OAAX,CAAmBC,IAAnB,CAAwB,GAAxB;AACA;AACH,KAJqB,CAMtB;;;AACA,UAAMC,KAAK,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,4BAAZ,EAAyC;AACzDC,MAAAA,MAAM,EAAE3B,WAAW,CAAC4B,UAAZ,GAAyBC;AADwB,KAAzC,EAEjB;AACCC,MAAAA,OAAO,EAAE;AAAC,yBAAkB,UAAS9B,WAAW,CAAC+B,UAAZ,EAAyB;AAArD;AADV,KAFiB,CAApB,CAPsB,CAYtB;AACA;AACA;AACA;;AACA,QAAId,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAAX,CAAqBe,KAArB,EAAhB;AACA,QAAIhB,WAAW,GAAG,KAAKF,KAAL,CAAWG,SAAX,CAAqBe,KAArB,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,KAAK,CAACS,IAAN,CAAWC,SAAX,CAAqBC,MAAzC,EAAiDH,CAAC,EAAlD,EAAsD;AAClD,UAAIR,KAAK,CAACS,IAAN,CAAWC,SAAX,CAAqBF,CAArB,EAAwBhB,SAA5B,EAAuC;AACnCA,QAAAA,SAAS,CAACoB,MAAV,CAAiBZ,KAAK,CAACS,IAAN,CAAWC,SAAX,CAAqBF,CAArB,CAAjB;AACH,OAFD,MAEO;AACHjB,QAAAA,WAAW,CAACqB,MAAZ,CAAmBZ,KAAK,CAACS,IAAN,CAAWC,SAAX,CAAqBF,CAArB,CAAnB;AACH;AACJ;;AAED,SAAKb,QAAL,CAAc;AACVL,MAAAA,QAAQ,EAAEU,KAAK,CAACS,IAAN,CAAWC,SADX;AAEVnB,MAAAA,WAAW,EAAEA,WAFH;AAGVC,MAAAA,SAAS,EAAEA;AAHD,KAAd;AAKAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWG,SAAvB;AACAqB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKzB,KAAL,CAAWE,WAAvB;AACH;;AAED,QAAMwB,YAAN,GAAqB;AACjB,UAAMf,KAAK,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,4BAAZ,EAAyC;AACzDC,MAAAA,MAAM,EAAE3B,WAAW,CAAC4B,UAAZ,GAAyBC;AADwB,KAAzC,EAEjB;AACCC,MAAAA,OAAO,EAAE;AAAC,yBAAkB,UAAS9B,WAAW,CAAC+B,UAAZ,EAAyB;AAArD;AADV,KAFiB,CAApB;AAKA,SAAKX,QAAL,CAAc;AACVL,MAAAA,QAAQ,EAAEU,KAAK,CAACS,IAAN,CAAWC;AADX,KAAd;AAGH;;AAED,QAAMxB,UAAN,CAAiB8B,GAAjB,EAAsB;AAClB,UAAMC,OAAO,GAAG,MAAMxC,KAAK,CAACwB,IAAN,CAAW,sCAAX,EAAmD;AACrEe,MAAAA,GAAG,EAAEA;AADgE,KAAnD,EAEnB;AACCX,MAAAA,OAAO,EAAE;AAAC,yBAAkB,UAAS9B,WAAW,CAAC+B,UAAZ,EAAyB;AAArD;AADV,KAFmB,CAAtB;AAKA,SAAKS,YAAL;AACH;;AAED,QAAM5B,YAAN,CAAmB6B,GAAnB,EAAwB;AACpB,UAAMC,OAAO,GAAG,MAAMxC,KAAK,CAACwB,IAAN,CAAW,wCAAX,EAAqD;AACvEe,MAAAA,GAAG,EAAEA;AADkE,KAArD,EAEnB;AACCX,MAAAA,OAAO,EAAE;AAAC,yBAAkB,UAAS9B,WAAW,CAAC+B,UAAZ,EAAyB;AAArD;AADV,KAFmB,CAAtB;AAKA,SAAKS,YAAL;AACH;;AAED,QAAM/B,OAAN,CAAckC,CAAd,EAAiB;AAEbA,IAAAA,CAAC,CAACC,cAAF,GAFa,CAGb;;AACA,QAAI,KAAKC,aAAL,KAAuB,EAA3B,EAA+B;AAC3B,UAAIC,OAAO,GAAG;AACVnB,QAAAA,MAAM,EAAE3B,WAAW,CAAC4B,UAAZ,GAAyBC,GADvB;AAEVkB,QAAAA,OAAO,EAAE,KAAKF,aAAL,CAAmBG,KAFlB;AAGVC,QAAAA,OAAO,EAAE,KAAKnC,KAAL,CAAWI;AAHV,OAAd,CAD2B,CAM3B;;AAEA,YAAMhB,KAAK,CAACwB,IAAN,CAAW,mCAAX,EAAgDoB,OAAhD,EACN;AACIhB,QAAAA,OAAO,EAAE;AAAC,2BAAkB,UAAS9B,WAAW,CAAC+B,UAAZ,EAAyB;AAArD;AADb,OADM,CAAN;AAKA,WAAKS,YAAL;AAEA,WAAKK,aAAL,CAAmBG,KAAnB,GAA2B,EAA3B,CAf2B,CAiB3B;AACA;AACA;AACA;AACA;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAE,GAApB;AAAyB,MAAA,MAAM,EAAC,MAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI,KAAKpC,KAAL,CAAWC,QAAX,CAAoBoC,GAApB,CACKC,IAAD,iBAAU,oBAAC,IAAD;AACE,MAAA,GAAG,EAAEA,IAAI,CAACjC,IADZ;AAEE,MAAA,IAAI,EAAEiC,IAAI,CAACjC,IAFb;AAGE,MAAA,MAAM,EAAE,KAAKP,YAHf;AAIE,MAAA,EAAE,EAAEwC,IAAI,CAACC,GAJX;AAKE,MAAA,OAAO,EAAED,IAAI,CAACH,OALhB;AAME,MAAA,OAAO,EAAEG,IAAI,CAACL,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADd,CAFJ,CADJ,CADJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKtC,OAArB;AAA8B,MAAA,SAAS,EAAC,YAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,EAAjB;AAAoB,MAAA,WAAW,EAAC,cAAhC;AAA+C,MAAA,GAAG,EAAG6C,CAAD,IAAO,KAAKT,aAAL,GAAqBS,CAAhF;AACI,MAAA,IAAI,EAAC,MADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,UAAD;AAAY,MAAA,eAAe,EAAC,UAA5B;AAAuC,MAAA,QAAQ,EAAE,KAAKxC,KAAL,CAAWI,YAA5D;AAA0E,MAAA,QAAQ,EAAGC,IAAD,IAAU;AAAC,aAAKN,UAAL,CAAgBM,IAAhB;AAAsB,OAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,IAAI,EAAC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJJ,CADJ,CAhBJ,CADJ,CADJ;AA6BH;;AAnJ4B;;AAsJjC,eAAehB,UAAU,CAACG,QAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport auth0Client from '../Auth';\nimport Task from './Task';\nimport axios from 'axios';\nimport { withRouter } from 'react-router-dom';\nimport FlipMove from \"react-flip-move\"\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './TaskList.scss';\n\nclass TaskList extends Component {\n    constructor(props) {\n        super(props);\n\n        this.addTask = this.addTask.bind(this);\n        this.deleteTask = this.deleteTask.bind(this);\n        this.completeTask = this.completeTask.bind(this);\n        this.updateDate = this.updateDate.bind(this);\n\n        this.state = {\n            taskList: [],\n            uncompleted: [],\n            completed: [],\n            selectedDate: null,\n        }\n    }\n\n    updateDate(date) {\n        this.setState({\n            selectedDate: date,\n        })\n    }\n\n    async componentDidMount() {\n        if (!auth0Client.isAuthenticated()) {\n            this.props.history.push('/');\n            return;\n        }\n\n        // const tasks = (await axios.get(`http://localhost:8081/app/${auth0Client.getProfile().sub}`)).data;\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        // tasks = tasks.data;\n        // console.log(tasks.data);\n        // console.log(questions);\n        // console.log(questions.todoTasks);\n        var completed = this.state.completed.slice();\n        var uncompleted = this.state.completed.slice();\n        for (var i = 0; i < tasks.data.todoTasks.length; i++) {\n            if (tasks.data.todoTasks[i].completed) {\n                completed.concat(tasks.data.todoTasks[i]);\n            } else {\n                uncompleted.concat(tasks.data.todoTasks[i]);\n            }\n        }\n\n        this.setState({\n            taskList: tasks.data.todoTasks,\n            uncompleted: uncompleted,\n            completed: completed,\n        })\n        console.log(this.state.completed);\n        console.log(this.state.uncompleted);\n    }\n\n    async refreshTasks() {\n        const tasks = await axios.post(`http://localhost:8081/app/`, {\n            userId: auth0Client.getProfile().sub,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.setState({\n            taskList: tasks.data.todoTasks,\n        });\n    }\n\n    async deleteTask(key) {\n        const attempt = await axios.post('http://localhost:8081/app/deleteTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    async completeTask(key) {\n        const attempt = await axios.post('http://localhost:8081/app/completeTask', {\n            key: key,\n        }, {\n            headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n        });\n        this.refreshTasks();\n    }\n\n    async addTask(e) {\n\n        e.preventDefault();\n        // console.log(auth0Client.getProfile());\n        if (this._inputElement !== \"\") {\n            var newTask = {\n                userId: auth0Client.getProfile().sub,\n                content: this._inputElement.value,\n                dueDate: this.state.selectedDate,\n            }\n            // console.log(newTask);\n\n            await axios.post('http://localhost:8081/app/newTask', newTask,\n            {\n                headers: {'Authorization': `Bearer ${auth0Client.getIdToken()}`}\n            });\n\n            this.refreshTasks();\n\n            this._inputElement.value = \"\";\n\n            // this.setState((prevState) => {\n            //     return {\n            //         taskList: prevState.taskList.concat(newTask),\n            //     };\n            // })\n        }\n    }\n\n    render() {\n        // console.log(this.state.taskList);\n        return (\n            <div className=\"container\">\n                <div className=\"TaskList\">\n                    <ul>\n                        <FlipMove duration={250} easing=\"ease\">\n                        {\n                            this.state.taskList.map(\n                                (task) => <Task \n                                            key={task.date} \n                                            date={task.date} \n                                            remove={this.completeTask} \n                                            id={task._id} \n                                            dueDate={task.dueDate} \n                                            content={task.content} />\n                                            )\n                        }\n                        </FlipMove>\n                    </ul>\n                    <div>\n                        <form onSubmit={this.addTask} className=\"form-group\">\n                            <input className=\"\" placeholder=\"Add new Task\" ref={(a) => this._inputElement = a}\n                                type=\"text\"></input>\n                            <DatePicker placeholderText=\"Due Date\" selected={this.state.selectedDate} onChange={(date) => {this.updateDate(date)}} />\n                            <button className=\"btn btn-primary\" type=\"submit\">Add</button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(TaskList);"]},"metadata":{},"sourceType":"module"}